{"version":3,"sources":["components/Address.jsx","components/Balance.jsx","constants.js","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/Wallet.jsx","components/Account.jsx","components/BytesStringInput.jsx","components/Contract/FunctionForm.jsx","components/Contract/utils.js","components/Faucet.jsx","helpers/loadAppContracts.js","components/Swap.jsx","components/Timeline.jsx","components/L2Bridge.jsx","ethereumLogo.png","components/Header1.jsx","components/BigTransfer.jsx","components/Library.jsx","components/Benefits.jsx","components/Footer.jsx","components/PrivateLibrary.jsx","components/SharingHistory.jsx","App.jsx","hooks/useContractConfig.js","index.jsx"],"names":["Text","Typography","Address","props","address","value","ens","useLookupAddress","ensProvider","currentTheme","useThemeSwitcher","avatar","paragraph","rows","displayAddress","substr","indexOf","size","text","etherscanLink","blockExplorer","blockExplorerLink","minimized","style","verticalAlign","color","target","href","rel","seed","toLowerCase","scale","onChange","editable","copyable","fontSize","paddingLeft","require","utils","INFURA_ID","NETWORKS","localhost","name","chainId","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","localArbitrum","localArbitrumL1","rinkebyArbitrum","arbitrum","localOptimismL1","localOptimism","kovanOptimism","optimism","localAvalanche","fujiAvalanche","mainnetAvalanche","testnetHarmony","mainnetHarmony","ethers","callbacks","Transactor","providerOrSigner","etherscan","tx","callback","Signer","isSigner","provider","signer","getNetwork","network","_isProvider","getSigner","console","log","options","notify","navigator","onLine","dappId","system","networkId","transactionHandler","txInformation","possibleFunction","transaction","hash","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","on","onclick","open","notification","info","message","description","placement","txResult","listeningInterval","setInterval","getTransactionReceipt","currentTransactionReceipt","confirmations","clearInterval","wait","data","error","JSON","parse","stringify","body","obj","errorObj","e","Blockie","isENS","endsWith","AddressInput","useState","setValue","scan","setScan","currentValue","updateAddress","useCallback","newValue","resolveName","possibleAddress","zIndex","position","left","top","width","onClick","delay","resolution","onError","onScan","possibleNewValue","lastIndexOf","id","autoComplete","autoFocus","placeholder","prefix","isAddress","addonAfter","marginTop","cursor","count","CameraOutlined","QrcodeOutlined","Paragraph","Account","userSigner","localProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","networkDisplay","modalButtons","cachedProvider","push","marginLeft","shape","constants","BigNumber","contractListPromise","externalContractsPromise","loadAppContracts","config","default","deployedContracts","externalContracts","Select","Option","Swap","Header1","acnt","setRoute","className","src","logo","loading","alt","height","to","BigTransfer","writeContracts","fileUrl","setFileUrl","priv","setPriv","fileName","setfileName","fileCategory","setfileCategory","fileDescription","setfileDescription","submitContract","Library","PrivateUpload","waveTnx","publicUpload","MozTransform","MsTransform","type","setUrl","margin","backgroundColor","padding","disabled","paddingTop","checkedChildren","unCheckedChildren","defaultChecked","WebkitTransform","publicLibrary","searchEvents","setSearchEvents","val","setVal","getFilePrice","x","assetPrice","buyFile","then","r","buyItem","filter","item","includes","display","flexWrap","length","map","index","Link","sizes","download","toString","transactionHash","blockNumber","Benefits","Footer","h","role","PrivateLibrary","privateLibrary","shareToAddresses","setShareToAddresses","salePrice","newPrice","prompt","publicSale","update","share","shareEvents","Panel","Collapse","shareEventsReverse","it","args","reverse","defaultActiveKey","header","headStyle","borderRadius","background","bodyStyle","minWidth","alignContent","justifyContent","alignItems","marginRight","fontWeight","marginLRight","blockHash","BufferList","ipfsAPI","host","port","protocol","targetNetwork","scaffoldEthProvider","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","walletLinkProvider","WalletLink","appName","makeWeb3Provider","Web3Modal","cacheProvider","theme","providerOptions","walletconnect","package","WalletConnectProvider","bridge","infuraId","rpc","portis","Portis","fortmatic","Fortmatic","key","connector","_options","enable","authereum","Authereum","App","_network","injectedProvider","setInjectedProvider","setAddress","clearCachedProvider","disconnect","setTimeout","reload","useExchangeEthPrice","useGasPrice","useUserProviderAndSigner","useEffect","getAddress","newAddress","localChainId","selectedChainId","yourLocalBalance","useBalance","yourMainnetBalance","contractConfig","contractsConfig","setContractsConfig","loadFunc","useContractConfig","readContracts","useContractLoader","mainnetContracts","useOnBlock","_lastBlockNumber","myMainnetDAIBalance","useContractReader","uploadEvents","useEventListener","connect","Web3Provider","code","reason","pathname","right","exact","path","themes","dark","light","subgraphUri","localStorage","getItem","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","document","getElementById"],"mappings":"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","file":"static/js/main.74a9a5dc.chunk.js","sourcesContent":["import { Skeleton, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) =>\r\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\r\n\r\nexport default function Address(props) {\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const { currentTheme } = useThemeSwitcher();\r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);\r\n\r\n  if (ens && ens.indexOf(\"0x\") < 0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (props.size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\r\n      </span>\r\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\r\n        {text}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useBalance } from \"eth-hooks\";\r\n\r\nconst { utils } = require(\"ethers\");\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a balance of given address in ether & dollar\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Balance\r\n    address={address}\r\n    provider={mainnetProvider}\r\n    price={price}\r\n  />\r\n\r\n  ~ If you already have the balance as a bignumber ~\r\n  <Balance\r\n    balance={balance}\r\n    price={price}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to given address\r\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n*/\r\n\r\nexport default function Balance(props) {\r\n  const [dollarMode, setDollarMode] = useState(true);\r\n\r\n  // const [listening, setListening] = useState(false);\r\n\r\n  const balance = useBalance(props.provider, props.address);\r\n\r\n  let floatBalance = parseFloat(\"0.00\");\r\n\r\n  let usingBalance = balance;\r\n\r\n  if (typeof props.balance !== \"undefined\") {\r\n    usingBalance = props.balance;\r\n  }\r\n  if (typeof props.value !== \"undefined\") {\r\n    usingBalance = props.value;\r\n  }\r\n\r\n  if (usingBalance) {\r\n    const etherBalance = utils.formatEther(usingBalance);\r\n    parseFloat(etherBalance).toFixed(2);\r\n    floatBalance = parseFloat(etherBalance);\r\n  }\r\n\r\n  let displayBalance = floatBalance.toFixed(4);\r\n\r\n  const price = props.price || props.dollarMultiplier;\r\n\r\n  if (price && dollarMode) {\r\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        fontSize: props.size ? props.size : 24,\r\n        padding: 8,\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={() => {\r\n        setDollarMode(!dollarMode);\r\n      }}\r\n    >\r\n      {displayBalance}\r\n    </span>\r\n  );\r\n}\r\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\r\n// export const INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\r\nexport const INFURA_ID = \"367c7782c20c417b982f27e96724e8ed\";\r\n\r\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\r\n\r\n// BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\r\n\r\nexport const NETWORKS = {\r\n  localhost: {\r\n    name: \"localhost\",\r\n    color: \"#666666\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n  },\r\n  mainnet: {\r\n    name: \"mainnet\",\r\n    color: \"#ff8b9e\",\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://etherscan.io/\",\r\n  },\r\n  kovan: {\r\n    name: \"kovan\",\r\n    color: \"#7003DD\",\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://kovan.etherscan.io/\",\r\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\r\n  },\r\n  rinkeby: {\r\n    name: \"rinkeby\",\r\n    color: \"#e0d068\",\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n    faucet: \"https://faucet.rinkeby.io/\",\r\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\r\n  },\r\n  ropsten: {\r\n    name: \"ropsten\",\r\n    color: \"#F60D09\",\r\n    chainId: 3,\r\n    faucet: \"https://faucet.ropsten.be/\",\r\n    blockExplorer: \"https://ropsten.etherscan.io/\",\r\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  goerli: {\r\n    name: \"goerli\",\r\n    color: \"#0975F6\",\r\n    chainId: 5,\r\n    faucet: \"https://goerli-faucet.slock.it/\",\r\n    blockExplorer: \"https://goerli.etherscan.io/\",\r\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  xdai: {\r\n    name: \"xdai\",\r\n    color: \"#48a9a6\",\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://dai.poa.network\",\r\n    faucet: \"https://xdai-faucet.top/\",\r\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\r\n  },\r\n  matic: {\r\n    name: \"matic\",\r\n    color: \"#2bbdf7\",\r\n    chainId: 137,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\r\n  },\r\n  mumbai: {\r\n    name: \"mumbai\",\r\n    color: \"#92D9FA\",\r\n    chainId: 80001,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\r\n  },\r\n  localArbitrum: {\r\n    name: \"localArbitrum\",\r\n    color: \"#50a0ea\",\r\n    chainId: 153869338190755,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:8547`,\r\n  },\r\n  localArbitrumL1: {\r\n    name: \"localArbitrumL1\",\r\n    color: \"#50a0ea\",\r\n    chainId: 44010,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:7545`,\r\n  },\r\n  rinkebyArbitrum: {\r\n    name: \"Arbitrum Testnet\",\r\n    color: \"#50a0ea\",\r\n    chainId: 421611,\r\n    blockExplorer: \"https://rinkeby-explorer.arbitrum.io/#/\",\r\n    rpcUrl: `https://rinkeby.arbitrum.io/rpc`,\r\n  },\r\n  arbitrum: {\r\n    name: \"Arbitrum\",\r\n    color: \"#50a0ea\",\r\n    chainId: 42161,\r\n    blockExplorer: \"https://explorer.arbitrum.io/#/\",\r\n    rpcUrl: `https://arb1.arbitrum.io/rpc`,\r\n    gasPrice: 0,\r\n  },\r\n  localOptimismL1: {\r\n    name: \"localOptimismL1\",\r\n    color: \"#f01a37\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":9545\",\r\n  },\r\n  localOptimism: {\r\n    name: \"localOptimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 420,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n    gasPrice: 0,\r\n  },\r\n  kovanOptimism: {\r\n    name: \"kovanOptimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 69,\r\n    blockExplorer: \"https://kovan-optimistic.etherscan.io/\",\r\n    rpcUrl: `https://kovan.optimism.io`,\r\n    gasPrice: 0,\r\n  },\r\n  optimism: {\r\n    name: \"optimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 10,\r\n    blockExplorer: \"https://optimistic.etherscan.io/\",\r\n    rpcUrl: `https://mainnet.optimism.io`,\r\n  },\r\n  localAvalanche: {\r\n    name: \"localAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43112,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:9650/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  fujiAvalanche: {\r\n    name: \"fujiAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43113,\r\n    blockExplorer: \"https://cchain.explorer.avax-test.network/\",\r\n    rpcUrl: `https://api.avax-test.network/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  mainnetAvalanche: {\r\n    name: \"mainnetAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43114,\r\n    blockExplorer: \"https://cchain.explorer.avax.network/\",\r\n    rpcUrl: `https://api.avax.network/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  testnetHarmony: {\r\n    name: \"Harmony Testnet\",\r\n    color: \"#00b0ef\",\r\n    chainId: 1666700000,\r\n    blockExplorer: \"https://explorer.pops.one/\",\r\n    rpcUrl: `https://api.s0.b.hmny.io`,\r\n    gasPrice: 1000000000,\r\n  },\r\n  mainnetHarmony: {\r\n    name: \"Harmony Mainnet\",\r\n    color: \"#00b0ef\",\r\n    chainId: 1666600000,\r\n    blockExplorer: \"https://explorer.harmony.one/\",\r\n    rpcUrl: `https://api.harmony.one`,\r\n    gasPrice: 1000000000,\r\n  },\r\n};\r\n\r\nexport const NETWORK = chainId => {\r\n  for (const n in NETWORKS) {\r\n    if (NETWORKS[n].chainId === chainId) {\r\n      return NETWORKS[n];\r\n    }\r\n  }\r\n};\r\n","import { notification } from \"antd\";\r\nimport Notify from \"bnc-notify\";\r\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\r\n\r\nconst { ethers } = require(\"ethers\");\r\n\r\n// this should probably just be renamed to \"notifier\"\r\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\r\n// https://docs.blocknative.com/notify\r\nconst callbacks = {};\r\n\r\nconst DEBUG = true;\r\n\r\nexport default function Transactor(providerOrSigner, gasPrice, etherscan) {\r\n  if (typeof providerOrSigner !== \"undefined\") {\r\n    // eslint-disable-next-line consistent-return\r\n    return async (tx, callback) => {\r\n      let signer;\r\n      let network;\r\n      let provider;\r\n      if (ethers.Signer.isSigner(providerOrSigner) === true) {\r\n        provider = providerOrSigner.provider;\r\n        signer = providerOrSigner;\r\n        network = providerOrSigner.provider && (await providerOrSigner.provider.getNetwork());\r\n      } else if (providerOrSigner._isProvider) {\r\n        provider = providerOrSigner;\r\n        signer = providerOrSigner.getSigner();\r\n        network = await providerOrSigner.getNetwork();\r\n      }\r\n\r\n      console.log(\"network\", network);\r\n\r\n      let options = null;\r\n      let notify = null;\r\n      if (navigator.onLine) {\r\n        options = {\r\n          dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\r\n          system: \"ethereum\",\r\n          networkId: network.chainId,\r\n          // darkMode: Boolean, // (default: false)\r\n          transactionHandler: txInformation => {\r\n            if (DEBUG) console.log(\"HANDLE TX\", txInformation);\r\n            const possibleFunction = callbacks[txInformation.transaction.hash];\r\n            if (typeof possibleFunction === \"function\") {\r\n              possibleFunction(txInformation.transaction);\r\n            }\r\n          },\r\n        };\r\n\r\n        notify = Notify(options);\r\n      }\r\n\r\n      let etherscanNetwork = \"\";\r\n      if (network.name && network.chainId > 1) {\r\n        etherscanNetwork = network.name + \".\";\r\n      }\r\n\r\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\r\n      if (network.chainId === 100) {\r\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\r\n      }\r\n\r\n      try {\r\n        let result;\r\n        if (tx instanceof Promise) {\r\n          if (DEBUG) console.log(\"AWAITING TX\", tx);\r\n          result = await tx;\r\n        } else {\r\n          if (!tx.gasPrice) {\r\n            tx.gasPrice = gasPrice || ethers.utils.parseUnits(\"4.1\", \"gwei\");\r\n          }\r\n          if (!tx.gasLimit) {\r\n            tx.gasLimit = ethers.utils.hexlify(120000);\r\n          }\r\n          if (DEBUG) console.log(\"RUNNING TX\", tx);\r\n          result = await signer.sendTransaction(tx);\r\n        }\r\n        if (DEBUG) console.log(\"RESULT:\", result);\r\n        // console.log(\"Notify\", notify);\r\n\r\n        if (callback) {\r\n          callbacks[result.hash] = callback;\r\n        }\r\n\r\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\r\n        if (notify && [1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\r\n          const { emitter } = notify.hash(result.hash);\r\n          emitter.on(\"all\", transaction => {\r\n            return {\r\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\r\n            };\r\n          });\r\n        } else {\r\n          notification.info({\r\n            message: \"Local Transaction Sent\",\r\n            description: result.hash,\r\n            placement: \"bottomRight\",\r\n          });\r\n          // on most networks BlockNative will update a transaction handler,\r\n          // but locally we will set an interval to listen...\r\n          if (callback) {\r\n            const txResult = await tx;\r\n            const listeningInterval = setInterval(async () => {\r\n              console.log(\"CHECK IN ON THE TX\", txResult, provider);\r\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\r\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\r\n                callback({ ...txResult, ...currentTransactionReceipt });\r\n                clearInterval(listeningInterval);\r\n              }\r\n            }, 500);\r\n          }\r\n        }\r\n\r\n        if (typeof result.wait === \"function\") {\r\n          await result.wait();\r\n        }\r\n\r\n        return result;\r\n      } catch (e) {\r\n        if (DEBUG) console.log(e);\r\n        // Accounts for Metamask and default signer on all networks\r\n        let message =\r\n          e.data && e.data.message\r\n            ? e.data.message\r\n            : e.error && JSON.parse(JSON.stringify(e.error)).body\r\n            ? JSON.parse(JSON.parse(JSON.stringify(e.error)).body).error.message\r\n            : e.data\r\n            ? e.data\r\n            : JSON.stringify(e);\r\n        if (!e.error && e.message) {\r\n          message = e.message;\r\n        }\r\n\r\n        console.log(\"Attempt to clean up:\", message);\r\n        try {\r\n          let obj = JSON.parse(message);\r\n          if (obj && obj.body) {\r\n            let errorObj = JSON.parse(obj.body);\r\n            if (errorObj && errorObj.error && errorObj.error.message) {\r\n              message = errorObj.error.message;\r\n            }\r\n          }\r\n        } catch (e) {\r\n          //ignore\r\n        }\r\n\r\n        notification.error({\r\n          message: \"Transaction Error\",\r\n          description: message,\r\n        });\r\n        if (callback && typeof callback === \"function\") {\r\n          callback(e);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\n\r\n// provides a blockie image for the address using \"react-blockies\" library\r\n\r\nexport default function Blockie(props) {\r\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\r\n    return <span />;\r\n  }\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\r\n}\r\n","import { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\r\nimport { Badge, Input } from \"antd\";\r\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport Blockie from \"./Blockie\";\r\nimport { ethers } from \"ethers\";\r\n\r\n// probably we need to change value={toAddress} to address={toAddress}\r\n\r\n/*\r\n  ~ What it does? ~\r\n  Displays an address input with QR scan option\r\n  ~ How can I use? ~\r\n  <AddressInput\r\n    autoFocus\r\n    ensProvider={mainnetProvider}\r\n    placeholder=\"Enter address\"\r\n    value={toAddress}\r\n    onChange={setToAddress}\r\n  />\r\n  ~ Features ~\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide placeholder=\"Enter address\" value for the input\r\n  - Value of the address input is stored in value={toAddress}\r\n  - Control input change by onChange={setToAddress}\r\n                          or onChange={address => { setToAddress(address);}}\r\n*/\r\n\r\nconst isENS = (address = \"\") => address.endsWith(\".eth\") || address.endsWith(\".xyz\");\r\n\r\nexport default function AddressInput(props) {\r\n  const { ensProvider, onChange } = props;\r\n  const [value, setValue] = useState(props.value);\r\n  const [scan, setScan] = useState(false);\r\n\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n  const ens = useLookupAddress(props.ensProvider, currentValue);\r\n\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (isENS(address)) {\r\n          try {\r\n            const possibleAddress = await ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setValue(address);\r\n        if (typeof onChange === \"function\") {\r\n          onChange(address);\r\n        }\r\n      }\r\n    },\r\n    [ensProvider, onChange],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {scan ? (\r\n        <div\r\n          style={{\r\n            zIndex: 256,\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 0,\r\n            width: \"100%\",\r\n          }}\r\n          onClick={() => {\r\n            setScan(false);\r\n          }}\r\n        >\r\n          <QrReader\r\n            delay={250}\r\n            resolution={1200}\r\n            onError={e => {\r\n              console.log(\"SCAN ERROR\", e);\r\n              setScan(false);\r\n            }}\r\n            onScan={newValue => {\r\n              if (newValue) {\r\n                console.log(\"SCAN VALUE\", newValue);\r\n                let possibleNewValue = newValue;\r\n                if (possibleNewValue.indexOf(\"/\") >= 0) {\r\n                  possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\r\n                  console.log(\"CLEANED VALUE\", possibleNewValue);\r\n                }\r\n                setScan(false);\r\n                updateAddress(possibleNewValue);\r\n              }\r\n            }}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Input\r\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\r\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\r\n        autoComplete=\"off\"\r\n        autoFocus={props.autoFocus}\r\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\r\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\r\n        value={ethers.utils.isAddress(currentValue) && !isENS(currentValue) && isENS(ens) ? ens : currentValue}\r\n        addonAfter={\r\n          <div\r\n            style={{ marginTop: 4, cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setScan(!scan);\r\n            }}\r\n          >\r\n            <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\r\n              <QrcodeOutlined style={{ fontSize: 18 }} />\r\n            </Badge>{\" \"}\r\n            Scan\r\n          </div>\r\n        }\r\n        onChange={e => {\r\n          updateAddress(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\r\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\r\nimport { ethers } from \"ethers\";\r\nimport QR from \"qrcode.react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport Balance from \"./Balance\";\r\nimport EtherInput from \"./EtherInput\";\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\r\n\r\nexport default function Wallet(props) {\r\n  const [signerAddress, setSignerAddress] = useState();\r\n  useEffect(() => {\r\n    async function getAddress() {\r\n      if (props.signer) {\r\n        const newAddress = await props.signer.getAddress();\r\n        setSignerAddress(newAddress);\r\n      }\r\n    }\r\n    getAddress();\r\n  }, [props.signer]);\r\n\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState();\r\n\r\n  const providerSend = props.signer ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton;\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  } else if (pk) {\r\n    const pk = localStorage.getItem(\"metaPrivateKey\");\r\n    const wallet = new ethers.Wallet(pk);\r\n\r\n    if (wallet.address !== selectedAddress) {\r\n      display = (\r\n        <div>\r\n          <b>*injected account*, private key unknown</b>\r\n        </div>\r\n      );\r\n    } else {\r\n      const extraPkDisplayAdded = {};\r\n      const extraPkDisplay = [];\r\n      extraPkDisplayAdded[wallet.address] = true;\r\n      extraPkDisplay.push(\r\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\r\n          <a href={\"/pk#\" + pk}>\r\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\r\n          </a>\r\n        </div>,\r\n      );\r\n      for (const key in localStorage) {\r\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\r\n          console.log(key);\r\n          const pastpk = localStorage.getItem(key);\r\n          const pastwallet = new ethers.Wallet(pastpk);\r\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\r\n            extraPkDisplayAdded[pastwallet.address] = true;\r\n            extraPkDisplay.push(\r\n              <div style={{ fontSize: 16 }}>\r\n                <a href={\"/pk#\" + pastpk}>\r\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\r\n                  {pastwallet.address.substr(0, 6)}\r\n                </a>\r\n              </div>,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      display = (\r\n        <div>\r\n          <b>Private Key:</b>\r\n\r\n          <div>\r\n            <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <i>\r\n            Point your camera phone at qr code to open in\r\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\r\n              burner wallet\r\n            </a>\r\n            :\r\n          </i>\r\n          <QR\r\n            value={\"https://xdai.io/\" + pk}\r\n            size=\"450\"\r\n            level=\"H\"\r\n            includeMargin\r\n            renderAs=\"svg\"\r\n            imageSettings={{ excavate: false }}\r\n          />\r\n\r\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\r\n            {\"https://xdai.io/\" + pk}\r\n          </Paragraph>\r\n\r\n          {extraPkDisplay ? (\r\n            <div>\r\n              <h3>Known Private Keys:</h3>\r\n              {extraPkDisplay}\r\n              <Button\r\n                onClick={() => {\r\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n                  if (currentPrivateKey) {\r\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\r\n                  }\r\n                  const randomWallet = ethers.Wallet.createRandom();\r\n                  const privateKey = randomWallet._signingKey().privateKey;\r\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(\"\");\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Hide\r\n      </Button>\r\n    );\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton,\r\n          receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.signer || props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = ethers.utils.parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport Address from \"./Address\";\r\nimport Balance from \"./Balance\";\r\nimport Wallet from \"./Wallet\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an Address, Balance, and Wallet as one Account component,\r\n  also allows users to log in to existing accounts and log out\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Account\r\n    address={address}\r\n    localProvider={localProvider}\r\n    userProvider={userProvider}\r\n    mainnetProvider={mainnetProvider}\r\n    price={price}\r\n    web3Modal={web3Modal}\r\n    loadWeb3Modal={loadWeb3Modal}\r\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n    blockExplorer={blockExplorer}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to the given address\r\n  - Provide localProvider={localProvider} to access balance on local network\r\n  - Provide userProvider={userProvider} to display a wallet\r\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n              to be able to log in/log out to/from existing accounts\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n*/\r\n\r\nexport default function Account({\r\n  address,\r\n  userSigner,\r\n  localProvider,\r\n  mainnetProvider,\r\n  price,\r\n  minimized,\r\n  web3Modal,\r\n  loadWeb3Modal,\r\n  logoutOfWeb3Modal,\r\n  blockExplorer,\r\n  networkDisplay,\r\n}) {\r\n  const modalButtons = [];\r\n  if (web3Modal) {\r\n    if (web3Modal.cachedProvider) {\r\n      modalButtons.push(\r\n        <Button\r\n          key=\"logoutbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          onClick={logoutOfWeb3Modal}\r\n        >\r\n          logout\r\n        </Button>,\r\n      );\r\n    } else {\r\n      modalButtons.push(\r\n        <Button\r\n          key=\"loginbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\r\n          onClick={loadWeb3Modal}\r\n        >\r\n          connect\r\n        </Button>,\r\n      );\r\n    }\r\n  }\r\n\r\n  const { currentTheme } = useThemeSwitcher();\r\n\r\n  const display = minimized ? (\r\n    \"\"\r\n  ) : (\r\n    <span>\r\n      {address ? (\r\n        <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} />\r\n      ) : (\r\n        \"Connecting...\"\r\n      )}\r\n      <Balance address={address} provider={localProvider} price={price} />\r\n      <Wallet\r\n        address={address}\r\n        provider={localProvider}\r\n        signer={userSigner}\r\n        ensProvider={mainnetProvider}\r\n        price={price}\r\n        color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\r\n      />\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* {display} */}\r\n\r\n      {modalButtons}\r\n      {networkDisplay}\r\n    </div>\r\n  );\r\n}\r\n","import { Input } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst { utils, constants } = require(\"ethers\");\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays input field with options to convert between STRING and BYTES32\r\n\r\n  ~ How can I use? ~\r\n\r\n  <BytesStringInput\r\n    autofocus\r\n    value={\"scaffold-eth\"}\r\n    placeholder=\"Enter value...\"\r\n    onChange={value => {\r\n      setValue(value);\r\n    }}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide value={value} to specify initial string\r\n  - Provide placeholder=\"Enter value...\" value for the input\r\n  - Control input change by onChange={value => { setValue(value);}}\r\n\r\n*/\r\n\r\nexport default function BytesStringInput(props) {\r\n  const [mode, setMode] = useState(\"STRING\");\r\n  const [display, setDisplay] = useState();\r\n  const [value, setValue] = useState(constants.HashZero);\r\n\r\n  // current value is the value in bytes32\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n\r\n  const option = title => {\r\n    return (\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          if (mode === \"STRING\") {\r\n            setMode(\"BYTES32\");\r\n            if (!utils.isHexString(currentValue)) {\r\n              /* in case user enters invalid bytes32 number,\r\n                   it considers it as string and converts to bytes32 */\r\n              const changedValue = utils.formatBytes32String(currentValue);\r\n              setDisplay(changedValue);\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          } else {\r\n            setMode(\"STRING\");\r\n            if (currentValue && utils.isHexString(currentValue)) {\r\n              setDisplay(utils.parseBytes32String(currentValue));\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let addonAfter;\r\n  if (mode === \"STRING\") {\r\n    addonAfter = option(\"STRING 🔀\");\r\n  } else {\r\n    addonAfter = option(\"BYTES32 🔀\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!currentValue) {\r\n      setDisplay(\"\");\r\n    }\r\n  }, [currentValue]);\r\n\r\n  return (\r\n    <Input\r\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\r\n      autoFocus={props.autoFocus}\r\n      value={display}\r\n      addonAfter={addonAfter}\r\n      onChange={async e => {\r\n        const newValue = e.target.value;\r\n        if (mode === \"STRING\") {\r\n          // const ethValue = parseFloat(newValue) / props.price;\r\n          // setValue(ethValue);\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(utils.formatBytes32String(newValue));\r\n          }\r\n          setValue(utils.formatBytes32String(newValue));\r\n          setDisplay(newValue);\r\n        } else {\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(newValue);\r\n          }\r\n          setValue(newValue);\r\n          setDisplay(newValue);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { Transactor } from \"../../helpers\";\r\nimport tryToDisplay from \"./utils\";\r\n\r\nconst { utils, BigNumber } = require(\"ethers\");\r\n\r\nconst getFunctionInputKey = (functionInfo, input, inputIndex) => {\r\n  const name = input?.name ? input.name : \"input_\" + inputIndex + \"_\";\r\n  return functionInfo.name + \"_\" + name + \"_\" + input.type;\r\n};\r\n\r\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\r\n  const [form, setForm] = useState({});\r\n  const [txValue, setTxValue] = useState();\r\n  const [returnValue, setReturnValue] = useState();\r\n\r\n  const tx = Transactor(provider, gasPrice);\r\n\r\n  const inputs = functionInfo.inputs.map((input, inputIndex) => {\r\n    const key = getFunctionInputKey(functionInfo, input, inputIndex);\r\n\r\n    let buttons = \"\";\r\n    if (input.type === \"bytes32\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"to bytes32\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.parseBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.formatBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === \"bytes\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"to hex\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.toUtf8String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === \"uint256\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              const formUpdate = { ...form };\r\n              formUpdate[key] = utils.parseEther(form[key]);\r\n              setForm(formUpdate);\r\n            }}\r\n          >\r\n            ✴️\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === \"address\") {\r\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\r\n      if (possibleAddress && possibleAddress.length === 42) {\r\n        buttons = (\r\n          <Tooltip placement=\"right\" title=\"blockie\">\r\n            <Blockies seed={possibleAddress} scale={3} />\r\n          </Tooltip>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div style={{ margin: 2 }} key={key}>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\r\n          autoComplete=\"off\"\r\n          value={form[key]}\r\n          name={key}\r\n          onChange={event => {\r\n            const formUpdate = { ...form };\r\n            formUpdate[event.target.name] = event.target.value;\r\n            setForm(formUpdate);\r\n          }}\r\n          suffix={buttons}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const txValueInput = (\r\n    <div style={{ margin: 2 }} key=\"txValueInput\">\r\n      <Input\r\n        placeholder=\"transaction value\"\r\n        onChange={e => setTxValue(e.target.value)}\r\n        value={txValue}\r\n        addonAfter={\r\n          <div>\r\n            <Row>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={async () => {\r\n                      const floatValue = parseFloat(txValue);\r\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\r\n                    }}\r\n                  >\r\n                    ✳️\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title=\"number to hex\">\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={async () => {\r\n                      setTxValue(BigNumber.from(txValue).toHexString());\r\n                    }}\r\n                  >\r\n                    #️⃣\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n\r\n  if (functionInfo.payable) {\r\n    inputs.push(txValueInput);\r\n  }\r\n\r\n  const buttonIcon =\r\n    functionInfo.type === \"call\" ? (\r\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\r\n    ) : (\r\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\r\n    );\r\n  inputs.push(\r\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\r\n      <Input\r\n        onChange={e => setReturnValue(e.target.value)}\r\n        defaultValue=\"\"\r\n        bordered={false}\r\n        disabled\r\n        value={returnValue}\r\n        suffix={\r\n          <div\r\n            style={{ width: 50, height: 30, margin: 0 }}\r\n            type=\"default\"\r\n            onClick={async () => {\r\n              const args = functionInfo.inputs.map((input, inputIndex) => {\r\n                const key = getFunctionInputKey(functionInfo, input, inputIndex);\r\n                let value = form[key];\r\n                if (input.baseType === \"array\") {\r\n                  value = JSON.parse(value);\r\n                } else if (input.type === \"bool\") {\r\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\r\n                    value = 1;\r\n                  } else {\r\n                    value = 0;\r\n                  }\r\n                }\r\n                return value;\r\n              });\r\n\r\n              let result;\r\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\r\n                try {\r\n                  const returned = await contractFunction(...args);\r\n                  result = tryToDisplay(returned);\r\n                } catch (err) {\r\n                  console.error(err);\r\n                }\r\n              } else {\r\n                const overrides = {};\r\n                if (txValue) {\r\n                  overrides.value = txValue; // ethers.utils.parseEther()\r\n                }\r\n                if (gasPrice) {\r\n                  overrides.gasPrice = gasPrice;\r\n                }\r\n                // Uncomment this if you want to skip the gas estimation for each transaction\r\n                // overrides.gasLimit = hexlify(1200000);\r\n\r\n                // console.log(\"Running with extras\",extras)\r\n                const returned = await tx(contractFunction(...args, overrides));\r\n                result = tryToDisplay(returned);\r\n              }\r\n\r\n              console.log(\"SETTING RESULT:\", result);\r\n              setReturnValue(result);\r\n              triggerRefresh(true);\r\n            }}\r\n          >\r\n            {buttonIcon}\r\n          </div>\r\n        }\r\n      />\r\n    </div>,\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          span={8}\r\n          style={{\r\n            textAlign: \"right\",\r\n            opacity: 0.333,\r\n            paddingRight: 6,\r\n            fontSize: 24,\r\n          }}\r\n        >\r\n          {functionInfo.name}\r\n        </Col>\r\n        <Col span={16}>{inputs}</Col>\r\n      </Row>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Address } from \"..\";\r\n\r\nconst { utils } = require(\"ethers\");\r\n\r\nconst tryToDisplay = thing => {\r\n  if (thing && thing.toNumber) {\r\n    try {\r\n      return thing.toNumber();\r\n    } catch (e) {\r\n      return \"Ξ\" + utils.formatUnits(thing, \"ether\");\r\n    }\r\n  }\r\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\r\n    return <Address address={thing} fontSize={22} />;\r\n  }\r\n  return JSON.stringify(thing);\r\n};\r\n\r\nexport default tryToDisplay;\r\n","import { SendOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Tooltip } from \"antd\";\r\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\r\nimport React, { useCallback, useState, useEffect } from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Wallet from \"./Wallet\";\r\n\r\nconst { utils } = require(\"ethers\");\r\n\r\n// improved a bit by converting address to ens if it exists\r\n// added option to directly input ens name\r\n// added placeholder option\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a local faucet to send ETH to given address, also wallet is provided\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Faucet\r\n    price={price}\r\n    localProvider={localProvider}\r\n    ensProvider={mainnetProvider}\r\n    placeholder={\"Send local faucet\"}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\r\n  - Provide localProvider={localProvider} to be able to send ETH to given address\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n              works both in input field & wallet\r\n  - Provide placeholder=\"Send local faucet\" value for the input\r\n*/\r\n\r\nexport default function Faucet(props) {\r\n  const [address, setAddress] = useState();\r\n  const [faucetAddress, setFaucetAddress] = useState();\r\n\r\n  useEffect(() => {\r\n    const getFaucetAddress = async () => {\r\n      if (props.localProvider) {\r\n        const _faucetAddress = await props.localProvider.listAccounts();\r\n        setFaucetAddress(_faucetAddress[0]);\r\n        //console.log(_faucetAddress);\r\n      }\r\n    };\r\n    getFaucetAddress();\r\n  }, [props.localProvider]);\r\n\r\n  let blockie;\r\n  if (address && typeof address.toLowerCase === \"function\") {\r\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\r\n  } else {\r\n    blockie = <div />;\r\n  }\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\r\n          try {\r\n            const possibleAddress = await props.ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setAddress(address);\r\n      }\r\n    },\r\n    [props.ensProvider, props.onChange],\r\n  );\r\n\r\n  const tx = Transactor(props.localProvider);\r\n\r\n  return (\r\n    <span>\r\n      <Input\r\n        size=\"large\"\r\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\r\n        prefix={blockie}\r\n        // value={address}\r\n        value={ens || address}\r\n        onChange={e => {\r\n          // setAddress(e.target.value);\r\n          updateAddress(e.target.value);\r\n        }}\r\n        suffix={\r\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\r\n            <Button\r\n              onClick={() => {\r\n                tx({\r\n                  to: address,\r\n                  value: utils.parseEther(\"0.01\"),\r\n                });\r\n                setAddress(\"\");\r\n              }}\r\n              shape=\"circle\"\r\n              icon={<SendOutlined />}\r\n            />\r\n            <Wallet\r\n              color=\"#888888\"\r\n              provider={props.localProvider}\r\n              ensProvider={props.ensProvider}\r\n              price={props.price}\r\n              address={faucetAddress}\r\n            />\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </span>\r\n  );\r\n}\r\n","const contractListPromise = import(\"../contracts/hardhat_contracts.json\");\r\n// @ts-ignore\r\nconst externalContractsPromise = import(\"../contracts/external_contracts\");\r\n\r\nexport const loadAppContracts = async () => {\r\n  const config = {};\r\n  config.deployedContracts = (await contractListPromise).default ?? {};\r\n  config.externalContracts = (await externalContractsPromise).default ?? {};\r\n  return config;\r\n};\r\n","import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\r\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Descriptions,\r\n  Divider,\r\n  Drawer,\r\n  InputNumber,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Space,\r\n  Tooltip,\r\n  Typography,\r\n} from \"antd\";\r\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\r\nimport { ethers } from \"ethers\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"../hooks\";\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\r\n\r\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\r\n\r\nconst erc20Abi = [\r\n  \"function balanceOf(address owner) view returns (uint256)\",\r\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\r\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\r\n];\r\n\r\nconst makeCall = async (callName, contract, args, metadata = {}) => {\r\n  if (contract[callName]) {\r\n    let result;\r\n    if (args) {\r\n      result = await contract[callName](...args, metadata);\r\n    } else {\r\n      result = await contract[callName]();\r\n    }\r\n    return result;\r\n  }\r\n  return undefined;\r\n  console.log(\"no call of that name!\");\r\n};\r\n\r\nconst defaultToken = \"ETH\";\r\nconst defaultTokenOut = \"DAI\";\r\nconst defaultSlippage = \"0.5\";\r\nconst defaultTimeLimit = 60 * 10;\r\n\r\nconst tokenListToObject = array =>\r\n  array.reduce((obj, item) => {\r\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\r\n    return obj;\r\n  }, {});\r\n\r\nfunction Swap({ selectedProvider, tokenListURI }) {\r\n  const [tokenIn, setTokenIn] = useState(defaultToken);\r\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\r\n  const [exact, setExact] = useState();\r\n  const [amountIn, setAmountIn] = useState();\r\n  const [amountInMax, setAmountInMax] = useState();\r\n  const [amountOut, setAmountOut] = useState();\r\n  const [amountOutMin, setAmountOutMin] = useState();\r\n  const [trades, setTrades] = useState();\r\n  const [routerAllowance, setRouterAllowance] = useState();\r\n  const [balanceIn, setBalanceIn] = useState();\r\n  const [balanceOut, setBalanceOut] = useState();\r\n  const [slippageTolerance, setSlippageTolerance] = useState(\r\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\r\n  );\r\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\r\n  const [swapping, setSwapping] = useState(false);\r\n  const [approving, setApproving] = useState(false);\r\n  const [settingsVisible, setSettingsVisible] = useState(false);\r\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\r\n\r\n  const [tokenList, setTokenList] = useState([]);\r\n\r\n  const [tokens, setTokens] = useState();\r\n\r\n  const [invertPrice, setInvertPrice] = useState(false);\r\n\r\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\r\n\r\n  const signer = selectedProvider.getSigner();\r\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\r\n\r\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\r\n\r\n  const debouncedAmountIn = useDebounce(amountIn, 500);\r\n  const debouncedAmountOut = useDebounce(amountOut, 500);\r\n\r\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\r\n\r\n  useEffect(() => {\r\n    const getTokenList = async () => {\r\n      console.log(_tokenListUri);\r\n      try {\r\n        const tokenListResponse = await fetch(_tokenListUri);\r\n        const tokenListJson = await tokenListResponse.json();\r\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\r\n          return t.chainId === activeChainId;\r\n        });\r\n        const ethToken = WETH[activeChainId];\r\n        ethToken.name = \"Ethereum\";\r\n        ethToken.symbol = \"ETH\";\r\n        ethToken.logoURI =\r\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\r\n        const _tokenList = [ethToken, ...filteredTokens];\r\n        setTokenList(_tokenList);\r\n        const _tokens = tokenListToObject(_tokenList);\r\n        setTokens(_tokens);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getTokenList();\r\n  }, [tokenListURI]);\r\n\r\n  const getTrades = async () => {\r\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\r\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\r\n\r\n      const baseTokens = tokenList\r\n        .filter(function (t) {\r\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\r\n        })\r\n        .map(el => {\r\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\r\n        });\r\n\r\n      const listOfPairwiseTokens = pairs(baseTokens);\r\n\r\n      const getPairs = async list => {\r\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\r\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\r\n      };\r\n\r\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\r\n\r\n      let bestTrade;\r\n\r\n      if (exact === \"in\") {\r\n        setAmountInMax();\r\n        bestTrade = Trade.bestTradeExactIn(\r\n          listOfPairs.filter(item => item),\r\n          new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\r\n          tokens[tokenOut],\r\n          { maxNumResults: 3, maxHops: 1 },\r\n        );\r\n        if (bestTrade[0]) {\r\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\r\n        } else {\r\n          setAmountOut();\r\n        }\r\n      } else if (exact === \"out\") {\r\n        setAmountOutMin();\r\n        bestTrade = Trade.bestTradeExactOut(\r\n          listOfPairs.filter(item => item),\r\n          tokens[tokenIn],\r\n          new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\r\n          { maxNumResults: 3, maxHops: 1 },\r\n        );\r\n        if (bestTrade[0]) {\r\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\r\n        } else {\r\n          setAmountIn();\r\n        }\r\n      }\r\n\r\n      setTrades(bestTrade);\r\n\r\n      console.log(bestTrade);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTrades();\r\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (trades && trades[0]) {\r\n      if (exact === \"in\") {\r\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\r\n      } else if (exact === \"out\") {\r\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\r\n      }\r\n    }\r\n  }, [slippageTolerance, amountIn, amountOut, trades]);\r\n\r\n  const getBalance = async (_token, _account, _contract) => {\r\n    let newBalance;\r\n    if (_token === \"ETH\") {\r\n      newBalance = await selectedProvider.getBalance(_account);\r\n    } else {\r\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\r\n    }\r\n    return newBalance;\r\n  };\r\n\r\n  const getAccountInfo = async () => {\r\n    if (tokens) {\r\n      const accountList = await selectedProvider.listAccounts();\r\n\r\n      if (tokenIn) {\r\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\r\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\r\n        setBalanceIn(newBalanceIn);\r\n\r\n        let allowance;\r\n\r\n        if (tokenIn === \"ETH\") {\r\n          setRouterAllowance();\r\n        } else {\r\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\r\n          setRouterAllowance(allowance);\r\n        }\r\n      }\r\n\r\n      if (tokenOut) {\r\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\r\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\r\n        setBalanceOut(newBalanceOut);\r\n      }\r\n    }\r\n  };\r\n\r\n  usePoller(getAccountInfo, 6000);\r\n\r\n  const route = trades\r\n    ? trades.length > 0\r\n      ? trades[0].route.path.map(function (item) {\r\n          return item.symbol;\r\n        })\r\n      : []\r\n    : [];\r\n\r\n  const updateRouterAllowance = async newAllowance => {\r\n    setApproving(true);\r\n    try {\r\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\r\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\r\n      console.log(result);\r\n      setApproving(false);\r\n      return true;\r\n    } catch (e) {\r\n      notification.open({\r\n        message: \"Approval unsuccessful\",\r\n        description: `Error: ${e.message}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const approveRouter = async () => {\r\n    const approvalAmount =\r\n      exact === \"in\"\r\n        ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\r\n        : amountInMax.raw.toString();\r\n    console.log(approvalAmount);\r\n    const approval = updateRouterAllowance(approvalAmount);\r\n    if (approval) {\r\n      notification.open({\r\n        message: \"Token transfer approved\",\r\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeRouterAllowance = async () => {\r\n    const approvalAmount = ethers.utils.hexlify(0);\r\n    console.log(approvalAmount);\r\n    const removal = updateRouterAllowance(approvalAmount);\r\n    if (removal) {\r\n      notification.open({\r\n        message: \"Token approval removed\",\r\n        description: `The router is no longer approved for ${tokenIn}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const executeSwap = async () => {\r\n    setSwapping(true);\r\n    try {\r\n      let args;\r\n      const metadata = {};\r\n\r\n      let call;\r\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\r\n      const path = trades[0].route.path.map(function (item) {\r\n        return item.address;\r\n      });\r\n      console.log(path);\r\n      const accountList = await selectedProvider.listAccounts();\r\n      const address = accountList[0];\r\n\r\n      if (exact === \"in\") {\r\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\r\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\r\n        if (tokenIn === \"ETH\") {\r\n          call = \"swapExactETHForTokens\";\r\n          args = [_amountOutMin, path, address, deadline];\r\n          metadata.value = _amountIn;\r\n        } else {\r\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\r\n          args = [_amountIn, _amountOutMin, path, address, deadline];\r\n        }\r\n      } else if (exact === \"out\") {\r\n        const _amountOut = ethers.utils.hexlify(\r\n          ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals),\r\n        );\r\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\r\n        if (tokenIn === \"ETH\") {\r\n          call = \"swapETHForExactTokens\";\r\n          args = [_amountOut, path, address, deadline];\r\n          metadata.value = _amountInMax;\r\n        } else {\r\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\r\n          args = [_amountOut, _amountInMax, path, address, deadline];\r\n        }\r\n      }\r\n      console.log(call, args, metadata);\r\n      const result = await makeCall(call, routerContract, args, metadata);\r\n      console.log(result);\r\n      notification.open({\r\n        message: \"Swap complete 🦄\",\r\n        description: (\r\n          <>\r\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\r\n            <Text copyable>{result.hash}</Text>\r\n          </>\r\n        ),\r\n      });\r\n      setSwapping(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setSwapping(false);\r\n      notification.open({\r\n        message: \"Swap unsuccessful\",\r\n        description: `Error: ${e.message}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const showSwapModal = () => {\r\n    setSwapModalVisible(true);\r\n  };\r\n\r\n  const handleSwapModalOk = () => {\r\n    setSwapModalVisible(false);\r\n    executeSwap();\r\n  };\r\n\r\n  const handleSwapModalCancel = () => {\r\n    setSwapModalVisible(false);\r\n  };\r\n\r\n  const insufficientBalance = balanceIn\r\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\r\n    : null;\r\n  const inputIsToken = tokenIn !== \"ETH\";\r\n  const insufficientAllowance = !inputIsToken\r\n    ? false\r\n    : routerAllowance\r\n    ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\r\n    : null;\r\n  const formattedBalanceIn = balanceIn\r\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\r\n    : null;\r\n  const formattedBalanceOut = balanceOut\r\n    ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\r\n    : null;\r\n\r\n  const metaIn =\r\n    tokens && tokenList && tokenIn\r\n      ? tokenList.filter(function (t) {\r\n          return t.address === tokens[tokenIn].address;\r\n        })[0]\r\n      : null;\r\n  const metaOut =\r\n    tokens && tokenList && tokenOut\r\n      ? tokenList.filter(function (t) {\r\n          return t.address === tokens[tokenOut].address;\r\n        })[0]\r\n      : null;\r\n\r\n  const cleanIpfsURI = uri => {\r\n    try {\r\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\r\n    } catch (e) {\r\n      console.log(e, uri);\r\n      return uri;\r\n    }\r\n  };\r\n\r\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\r\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\r\n\r\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\r\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\r\n  const priceDescription = rawPrice\r\n    ? invertPrice\r\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\r\n      : `${price} ${tokenOut} per ${tokenIn}`\r\n    : null;\r\n\r\n  const priceWidget = (\r\n    <Space>\r\n      <Text type=\"secondary\">{priceDescription}</Text>\r\n      <Button\r\n        type=\"text\"\r\n        onClick={() => {\r\n          setInvertPrice(!invertPrice);\r\n        }}\r\n      >\r\n        <RetweetOutlined />\r\n      </Button>\r\n    </Space>\r\n  );\r\n\r\n  const swapModal = (\r\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\r\n      <Row>\r\n        <Space>\r\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\r\n          {amountIn}\r\n          {tokenIn}\r\n        </Space>\r\n      </Row>\r\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\r\n        <span>↓</span>\r\n      </Row>\r\n      <Row>\r\n        <Space>\r\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\r\n          {amountOut}\r\n          {tokenOut}\r\n        </Space>\r\n      </Row>\r\n      <Divider />\r\n      <Row>{priceWidget}</Row>\r\n      <Row>\r\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\r\n          ? exact === \"in\"\r\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\r\n                6,\r\n              )} ${tokenOut} or the transaction will revert.`\r\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\r\n                6,\r\n              )} ${tokenIn} or the transaction will revert.`\r\n          : null}\r\n      </Row>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <Space>\r\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\r\n          <Typography>Uniswapper</Typography>\r\n        </Space>\r\n      }\r\n      extra={\r\n        <Button\r\n          type=\"text\"\r\n          onClick={() => {\r\n            setSettingsVisible(true);\r\n          }}\r\n        >\r\n          <SettingOutlined />\r\n        </Button>\r\n      }\r\n    >\r\n      <Space direction=\"vertical\">\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Card\r\n            size=\"small\"\r\n            type=\"inner\"\r\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\r\n            extra={\r\n              <>\r\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={() => {\r\n                    setAmountOut();\r\n                    setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\r\n                    setAmountOutMin();\r\n                    setAmountInMax();\r\n                    setExact(\"in\");\r\n                  }}\r\n                >\r\n                  {formattedBalanceIn}\r\n                </Button>\r\n              </>\r\n            }\r\n            style={{ width: 400, textAlign: \"left\" }}\r\n          >\r\n            <InputNumber\r\n              style={{ width: \"160px\" }}\r\n              min={0}\r\n              size=\"large\"\r\n              value={amountIn}\r\n              onChange={e => {\r\n                setAmountOut();\r\n                setTrades();\r\n                setAmountIn(e);\r\n                setExact(\"in\");\r\n              }}\r\n            />\r\n            <Select\r\n              showSearch\r\n              value={tokenIn}\r\n              style={{ width: \"120px\" }}\r\n              size=\"large\"\r\n              bordered={false}\r\n              defaultValue={defaultToken}\r\n              onChange={value => {\r\n                console.log(value);\r\n                if (value === tokenOut) {\r\n                  console.log(\"switch!\", tokenIn);\r\n                  setTokenOut(tokenIn);\r\n                  setAmountOut(amountIn);\r\n                  setBalanceOut(balanceIn);\r\n                }\r\n                setTokenIn(value);\r\n                setTrades();\r\n                setAmountIn();\r\n                setExact(\"out\");\r\n                setBalanceIn();\r\n              }}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              optionFilterProp=\"children\"\r\n            >\r\n              {tokenList.map(token => (\r\n                <Option key={token.symbol} value={token.symbol}>\r\n                  {token.symbol}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Card>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Tooltip title={route.join(\"->\")}>\r\n            <span>↓</span>\r\n          </Tooltip>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Card\r\n            size=\"small\"\r\n            type=\"inner\"\r\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\r\n            extra={\r\n              <>\r\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\r\n                <Button type=\"text\">{formattedBalanceOut}</Button>\r\n              </>\r\n            }\r\n            style={{ width: 400, textAlign: \"left\" }}\r\n          >\r\n            <InputNumber\r\n              style={{ width: \"160px\" }}\r\n              size=\"large\"\r\n              min={0}\r\n              value={amountOut}\r\n              onChange={e => {\r\n                setAmountOut(e);\r\n                setAmountIn();\r\n                setTrades();\r\n                setExact(\"out\");\r\n              }}\r\n            />\r\n            <Select\r\n              showSearch\r\n              value={tokenOut}\r\n              style={{ width: \"120px\" }}\r\n              size=\"large\"\r\n              bordered={false}\r\n              onChange={value => {\r\n                console.log(value, tokenIn, tokenOut);\r\n                if (value === tokenIn) {\r\n                  console.log(\"switch!\", tokenOut);\r\n                  setTokenIn(tokenOut);\r\n                  setAmountIn(amountOut);\r\n                  setBalanceIn(balanceOut);\r\n                }\r\n                setTokenOut(value);\r\n                setExact(\"in\");\r\n                setAmountOut();\r\n                setTrades();\r\n                setBalanceOut();\r\n              }}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              optionFilterProp=\"children\"\r\n            >\r\n              {tokenList.map(token => (\r\n                <Option key={token.symbol} value={token.symbol}>\r\n                  {token.symbol}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Card>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          {priceDescription ? priceWidget : null}\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Space>\r\n            {inputIsToken ? (\r\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\r\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\r\n              </Button>\r\n            ) : null}\r\n            <Button\r\n              size=\"large\"\r\n              loading={swapping}\r\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\r\n              onClick={showSwapModal}\r\n            >\r\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\r\n            </Button>\r\n            {swapModal}\r\n          </Space>\r\n        </Row>\r\n      </Space>\r\n      <Drawer\r\n        visible={settingsVisible}\r\n        onClose={() => {\r\n          setSettingsVisible(false);\r\n        }}\r\n        width={500}\r\n      >\r\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\r\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\r\n          <Descriptions.Item label=\"routerAllowance\">\r\n            <Space>\r\n              {routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\r\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\r\n            </Space>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\r\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\r\n          <Descriptions.Item label=\"bestPrice\">\r\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"nextMidPrice\">\r\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"priceImpact\">\r\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"slippageTolerance\">\r\n            <InputNumber\r\n              defaultValue={defaultSlippage}\r\n              min={0}\r\n              max={100}\r\n              precision={2}\r\n              formatter={value => `${value}%`}\r\n              parser={value => value.replace(\"%\", \"\")}\r\n              onChange={value => {\r\n                console.log(value);\r\n\r\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\r\n                setSlippageTolerance(slippagePercent);\r\n              }}\r\n            />\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\r\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\r\n          <Descriptions.Item label=\"timeLimitInSeconds\">\r\n            <InputNumber\r\n              min={0}\r\n              max={3600}\r\n              defaultValue={defaultTimeLimit}\r\n              onChange={value => {\r\n                console.log(value);\r\n                setTimeLimit(value);\r\n              }}\r\n            />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Drawer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Swap;\r\n","import { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\r\nimport { Timeline, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\n\r\nconst { Text } = Typography;\r\n\r\n// displays a timeline for scaffold-eth usage\r\n\r\nexport default function TimelineDisplay(props) {\r\n  return (\r\n    <Timeline mode=\"right\">\r\n      <Timeline.Item dot=\"💾\">\r\n        <Text delete>\r\n          Clone and Install from the{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\r\n            github repo\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⚛️\">\r\n        <Text delete>\r\n          Start your frontend app with: <Text strong>yarn start</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⛓\">\r\n        <Text delete={props.chainIsUp}>\r\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📝\">\r\n        <Text delete={props.hasOwner}>\r\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🤡\">\r\n        <Text delete={props.isNotSmoort}>\r\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\r\n        <Text delete={props.hasEther}>\r\n          Send test ether to your{\" \"}\r\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\r\n          (bottom left) faucet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\r\n        color={props.contractHasEther ? \"green\" : \"blue\"}\r\n      >\r\n        <Text delete={props.contractHasEther}>\r\n          Deposit some funds into your{\" \"}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\r\n          smart contract wallet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\r\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\r\n      >\r\n        <Text delete={props.amOwnerOfContract}>\r\n          Set <b>owner</b> of your{\" \"}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\r\n          smart contract wallet to your{\" \"}\r\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"☢️\">\r\n        <Text>\r\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🔬\">\r\n        <Text>\r\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\r\n          <Text strong>yarn run test</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🚀\">\r\n        <Text>\r\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\r\n            @ me\r\n          </a>\r\n          !\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📖\">\r\n        <Text>\r\n          Read more about{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\r\n            Ethereum\r\n          </a>\r\n          ,{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\r\n            Solidity\r\n          </a>\r\n          , and{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\r\n            Buidler\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n    </Timeline>\r\n  );\r\n}\r\n","import { utils, ethers } from \"ethers\";\r\nimport { Button, Input, Form, Select, InputNumber, Table, Radio } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useContractLoader, useOnBlock } from \"eth-hooks\";\r\nimport { NETWORKS } from \"../constants\";\r\nimport { Transactor } from \"../helpers\";\r\n\r\n/*\r\nThis is a component for bridging between L1 & L2\r\nCurrently it supports Testnet deposits for Arbitrum & Optimism\r\n\r\n __          _______ _____\r\n \\ \\        / /_   _|  __ \\\r\n  \\ \\  /\\  / /  | | | |__) |\r\n   \\ \\/  \\/ /   | | |  ___/\r\n    \\  /\\  /   _| |_| |\r\n     \\/  \\/   |_____|_|\r\n\r\n\r\n*/\r\n\r\nexport default function L2ArbitrumBridge({ address, userSigner }) {\r\n  const [L1EthBalance, setL1EthBalance] = useState(\"...\");\r\n  const [L2EthBalance, setL2EthBalance] = useState(\"...\");\r\n  const [L1Provider, setL1Provider] = useState(\"\");\r\n  const [L2Provider, setL2Provider] = useState(\"\");\r\n  const [rollup, setRollup] = useState(\"arbitrum\");\r\n  const [environment, setEnvironment] = useState(\"test\");\r\n\r\n  const rollupConfig = {\r\n    arbitrum: {\r\n      test: { L1: NETWORKS.rinkeby, L2: NETWORKS.rinkebyArbitrum },\r\n      main: { L1: NETWORKS.mainnet, L2: NETWORKS.arbitrum },\r\n      local: { L1: NETWORKS.localArbitrumL1, L2: NETWORKS.localArbitrum },\r\n    },\r\n    optimism: {\r\n      test: { L1: NETWORKS.kovan, L2: NETWORKS.kovanOptimism },\r\n      local: { L1: NETWORKS.localOptimismL1, L2: NETWORKS.localOptimism },\r\n    },\r\n  };\r\n\r\n  const activeConfig = rollupConfig[rollup][environment];\r\n\r\n  const selectedChainId =\r\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\r\n\r\n  const tx = Transactor(userSigner);\r\n\r\n  useEffect(() => {\r\n    async function setProviders() {\r\n      const L1 = activeConfig.L1;\r\n      const L2 = activeConfig.L2;\r\n      setL1Provider(new ethers.providers.StaticJsonRpcProvider(L1.rpcUrl));\r\n      setL2Provider(new ethers.providers.StaticJsonRpcProvider(L2.rpcUrl));\r\n      setL1EthBalance(\"...\");\r\n      setL2EthBalance(\"...\");\r\n    }\r\n    setProviders();\r\n  }, [rollup]);\r\n\r\n  const contracts = useContractLoader(userSigner, { externalContracts: L1BridgeMetadata, hardhatContracts: {} });\r\n\r\n  useOnBlock(L1Provider, async () => {\r\n    console.log(`⛓ A new mainnet block is here: ${L1Provider._lastBlockNumber}`);\r\n    const yourL1Balance = await L1Provider.getBalance(address);\r\n    setL1EthBalance(yourL1Balance ? ethers.utils.formatEther(yourL1Balance) : \"...\");\r\n    const yourL2Balance = await L2Provider.getBalance(address);\r\n    setL2EthBalance(yourL2Balance ? ethers.utils.formatEther(yourL2Balance) : \"...\");\r\n  });\r\n\r\n  const { Option } = Select;\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 12 },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 12,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"token\",\r\n      key: \"token\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: `${activeConfig.L1.name} L1 Balance`,\r\n      dataIndex: \"l1\",\r\n      key: \"l1\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: `${activeConfig.L1.name} ${rollup} Balance`,\r\n      dataIndex: \"l2\",\r\n      key: \"l2\",\r\n      align: \"center\",\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      token: \"ETH\",\r\n      l1: \"Ξ\" + L1EthBalance,\r\n      l2: \"Ξ\" + L2EthBalance,\r\n    },\r\n  ];\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onAssetChange = value => {\r\n    console.log(value);\r\n  };\r\n\r\n  async function onFinish(values) {\r\n    console.log(contracts);\r\n    console.log(values.amount.toString());\r\n    console.log(rollup);\r\n    let newTx;\r\n    try {\r\n      if (rollup === \"arbitrum\") {\r\n        newTx = await tx(\r\n          contracts.Inbox.depositEth(1_300_000, {\r\n            value: utils.parseEther(values.amount.toString()),\r\n            gasLimit: 300000,\r\n          }),\r\n        );\r\n      } else if (rollup === \"optimism\") {\r\n        newTx = await tx(\r\n          contracts.OVM_L1StandardBridge.depositETH(1_300_000, \"0x\", {\r\n            value: utils.parseEther(values.amount.toString()),\r\n          }),\r\n        );\r\n      }\r\n      await newTx.wait();\r\n      console.log(\"woop!\");\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.log(\"something went wrong!\");\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const wrongNetwork = selectedChainId !== activeConfig.L1.chainId;\r\n\r\n  return (\r\n    <div style={{ padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\r\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\r\n        <h2>Welcome to the L2 Deposit Bridge!</h2>\r\n        <Radio.Group\r\n          value={rollup}\r\n          onChange={e => {\r\n            setRollup(e.target.value);\r\n          }}\r\n          style={{ marginBottom: 10 }}\r\n        >\r\n          <Radio.Button value=\"arbitrum\">Arbitrum</Radio.Button>\r\n          <Radio.Button value=\"optimism\">Optimism</Radio.Button>\r\n        </Radio.Group>\r\n\r\n        <Table columns={columns} dataSource={data} pagination={false} style={{ marginBottom: 20 }} />\r\n\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name=\"control-hooks\"\r\n          onFinish={onFinish}\r\n          initialValues={{ assetType: \"eth\" }}\r\n        >\r\n          <Form.Item\r\n            name=\"assetType\"\r\n            label=\"Select Asset Type\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"Select an asset type\" onChange={onAssetChange} allowClear>\r\n              <Option value=\"eth\">ETH</Option>\r\n              <Option disabled value=\"erc20\">\r\n                ERC-20\r\n              </Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name=\"address\" label=\"Address\">\r\n            <Input disabled placeholder={address} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"amount\"\r\n            label=\"Amount to bridge\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={wrongNetwork}>\r\n              {wrongNetwork ? `Switch wallet to ${activeConfig.L1.name}` : \"Deposit\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Arbitrum Inbox https://rinkeby.etherscan.io/address/0xa157dc79ca26d69c3b1282d03ec42bdee2790a8f#code\r\nconst ArbitrumInboxABI = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" },\r\n      { indexed: false, internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n    ],\r\n    name: \"InboxMessageDelivered\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" }],\r\n    name: \"InboxMessageDeliveredFromOrigin\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [{ indexed: false, internalType: \"address\", name: \"newSource\", type: \"address\" }],\r\n    name: \"WhitelistSourceUpdated\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"bridge\",\r\n    outputs: [{ internalType: \"contract IBridge\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"l2CallValue\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"excessFeeRefundAddress\", type: \"address\" },\r\n      { internalType: \"address\", name: \"callValueRefundAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n    ],\r\n    name: \"createRetryableTicket\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" }],\r\n    name: \"depositEth\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IBridge\", name: \"_bridge\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_whitelist\", type: \"address\" },\r\n    ],\r\n    name: \"initialize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"isMaster\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n    ],\r\n    name: \"sendContractTransaction\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\r\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n    ],\r\n    name: \"sendL1FundedContractTransaction\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\r\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n    ],\r\n    name: \"sendL1FundedUnsignedTransaction\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\r\n    name: \"sendL2Message\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\r\n    name: \"sendL2MessageFromOrigin\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n    ],\r\n    name: \"sendUnsignedTransaction\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newSource\", type: \"address\" }],\r\n    name: \"updateWhitelistSource\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"whitelist\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\n// https://github.com/ethereum-optimism/optimism/blob/2bd49730fa8d2c10953873f0ccc792198a49d5c9/packages/contracts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1StandardBridge.sol\r\nconst OVM_L1StandardBridgeABI = [\r\n  \"function depositETH(uint32 _l2Gas,bytes calldata _data) external payable\",\r\n  \"function depositETHTo(address _to,uint32 _l2Gas,bytes calldata _data) external payable\",\r\n  \"function finalizeETHWithdrawal (address _from,address _to,uint _amount,bytes calldata _data) external\",\r\n];\r\n\r\nconst L1BridgeMetadata = {\r\n  // Arbitrium Contract's\r\n  44010: {\r\n    contracts: {\r\n      Inbox: {\r\n        address: \"0xA4d796Ad4e79aFB703340a596AEd88f8a5924183\",\r\n        abi: ArbitrumInboxABI,\r\n      },\r\n    },\r\n  },\r\n  4: {\r\n    contracts: {\r\n      Inbox: {\r\n        address: \"0x578bade599406a8fe3d24fd7f7211c0911f5b29e\",\r\n        abi: ArbitrumInboxABI,\r\n      },\r\n    },\r\n  },\r\n  // Optimism Contract's\r\n  31337: {\r\n    contracts: {\r\n      OVM_L1StandardBridge: {\r\n        address: \"0x998abeb3E57409262aE5b751f60747921B33613E\",\r\n        abi: OVM_L1StandardBridgeABI,\r\n      },\r\n    },\r\n  },\r\n  42: {\r\n    contracts: {\r\n      OVM_L1StandardBridge: {\r\n        address: \"0x22F24361D548e5FaAfb36d1437839f080363982B\",\r\n        abi: OVM_L1StandardBridgeABI,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/ethereumLogo.a1b9f99b.png\";","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../ethereumLogo.png\";\r\nexport default function Header1({ acnt, setRoute }) {\r\n  return (\r\n    <header className=\"header \">\r\n      <div className=\"header-absolute\">\r\n        <div className=\"content mod--header\">\r\n          <div className=\"header__columns\">\r\n            <div className=\"header__col\">\r\n              <a\r\n                href=\"/\"\r\n                className=\"header__logo-link w-inline-block header-logo-link-a\"\r\n                style={{ fontSize: \"1.5rem\", color: \"white\" }}\r\n              >\r\n                <img src={logo} loading=\"lazy\" alt=\"\" width=\"100\" height=\"50\" className=\"header__logo-img\" />\r\n                Lebium\r\n              </a>\r\n            </div>\r\n            <div className=\"header__col mod--2\">\r\n              <Link to=\"/\" data-anim=\"link\" className=\"header__nav-link w-inline-block\">\r\n                <div className=\"nav-txt-anim\">\r\n                  <div className=\"nav-txt mod--over\">Upload</div>\r\n                  <div className=\"nav-txt\">Upload</div>\r\n                </div>\r\n              </Link>\r\n              <Link\r\n                to=\"/library\"\r\n                data-anim=\"link\"\r\n                className=\"header__nav-link w-inline-block\"\r\n                onClick={() => {\r\n                  setRoute(\"/library\");\r\n                }}\r\n              >\r\n                <div className=\"nav-txt-anim\">\r\n                  <div className=\"nav-txt mod--over\">Public Library</div>\r\n                  <div className=\"nav-txt\">Public Library</div>\r\n                </div>\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/privatelibrary\"\r\n                data-anim=\"link\"\r\n                className=\"header__nav-link w-inline-block\"\r\n                onClick={() => {\r\n                  setRoute(\"/privatelibrary\");\r\n                }}\r\n              >\r\n                <div className=\"nav-txt-anim\">\r\n                  <div className=\"nav-txt mod--over\">Private Library</div>\r\n                  <div className=\"nav-txt\">Private Library</div>\r\n                </div>\r\n              </Link>\r\n              <Link\r\n                to=\"/history\"\r\n                data-anim=\"link\"\r\n                className=\"header__nav-link w-inline-block\"\r\n                onClick={() => {\r\n                  setRoute(\"/history\");\r\n                }}\r\n              >\r\n                <div className=\"nav-txt-anim\">\r\n                  <div className=\"nav-txt mod--over\">Shared</div>\r\n                  <div className=\"nav-txt\">Shared</div>\r\n                </div>\r\n              </Link>\r\n              {/* <a href=\"#Benefits\" data-anim=\"link\" className=\"header__nav-link w-inline-block\">\r\n                <div className=\"nav-txt-anim\">\r\n                  <div className=\"nav-txt mod--over\">Benefits</div>\r\n                  <div className=\"nav-txt\">Benefits</div>\r\n                </div>\r\n              </a>\r\n              <a href=\"#About\" data-anim=\"link\" className=\"header__nav-link w-inline-block\">\r\n                <div className=\"nav-txt-anim\">\r\n                  <div className=\"nav-txt mod--over\">About</div>\r\n                  <div className=\"nav-txt\">About</div>\r\n                </div>\r\n              </a> */}\r\n            </div>\r\n            <div className=\"header__col\">\r\n              {acnt}\r\n\r\n              <div className=\"header__humburger-wrap\">\r\n                <div className=\"header__humb\">\r\n                  <div className=\"header__humb-line mod--1\"></div>\r\n                  <div className=\"header__humb-line mod--2\"></div>\r\n                  <div className=\"header__humb-line mod--3\"></div>\r\n                </div>\r\n                <div className=\"header__humb-close\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* </div> */}\r\n        <div className=\"menu header-menu-display-c\">\r\n          <div className=\"menu__content menu-content-opacity-height-c\">\r\n            <nav className=\"menu__nav header-nav-bar-c\">\r\n              <a href=\"#uploadFiles\" className=\"menu__nav-link\">\r\n                Upload Files\r\n              </a>\r\n              <a href=\"#Benefits\" className=\"menu__nav-link\">\r\n                Benefits\r\n              </a>\r\n              <a href=\"#About\" className=\"menu__nav-link\">\r\n                About\r\n              </a>\r\n            </nav>\r\n            <a href=\"#\" className=\"btn btn--reg w-button\">\r\n              Connect Wallet\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FileUpload } from \"react-ipfs-uploader\";\r\nimport { Input, Checkbox, Button, Switch } from \"antd\";\r\nimport \"./BigTransfer.css\";\r\n\r\nexport default function BigTransfer({ writeContracts, tx }) {\r\n  const mystyle = {\r\n    // WebkitTransform: \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n    MozTransform: \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n    MsTransform: \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n    // transform: \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n  };\r\n\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n\r\n  const [priv, setPriv] = useState(false);\r\n\r\n  const [fileName, setfileName] = useState(\"\");\r\n  const [fileCategory, setfileCategory] = useState(\"\");\r\n\r\n  const [fileDescription, setfileDescription] = useState(\"\");\r\n\r\n  const submitContract = async () => {\r\n    try {\r\n      console.log(\"writeContracts\", writeContracts);\r\n      let waveTnx;\r\n      if (priv) {\r\n        waveTnx = await tx(writeContracts.Library.PrivateUpload(fileName, fileUrl, fileDescription, fileCategory));\r\n      } else {\r\n        waveTnx = await tx(writeContracts.Library.publicUpload(fileName, fileUrl, fileDescription, fileCategory));\r\n      }\r\n\r\n      console.log(\"Minig..\", waveTnx.hash);\r\n\r\n      await waveTnx.wait();\r\n      console.log(\"Minig---\", waveTnx.hash);\r\n\r\n      setFileUrl(\"\");\r\n      setfileName(\"\");\r\n      setfileCategory(\"\");\r\n      setfileDescription(\"\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      id=\"uploadFiles\"\r\n      data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\"\r\n      className=\"section mod--hero\"\r\n      style={mystyle}\r\n    >\r\n      <div className=\"content mod--hero u-upload-opacity\">\r\n        <div className=\"hero__content\">\r\n          <h2 className=\"heading1 mod--hero\" style={{ color: \"white\" }}>\r\n            Make your data immortal\r\n          </h2>\r\n          <p className=\"hero__p\">\r\n            Upload files,books,videos to our decentralized library for users around the world. View and download any\r\n            file from our library without restrictions.\r\n          </p>\r\n\r\n          <div>\r\n            <label>File name:</label>\r\n            <Input type=\"text\" placeholder=\"File Name\" onChange={e => setfileName(e.target.value)} value={fileName} />\r\n\r\n            <br />\r\n            <label>File category:</label>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"File Name\"\r\n              onChange={e => setfileCategory(e.target.value)}\r\n              value={fileCategory}\r\n            />\r\n\r\n            <br />\r\n\r\n            <label>File Description:</label>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"File Description\"\r\n              onChange={e => setfileDescription(e.target.value)}\r\n              value={fileDescription}\r\n            />\r\n\r\n            <br />\r\n            <label>File Select:</label>\r\n            <FileUpload setUrl={setFileUrl} style={{ margin: \"20\" }} />\r\n\r\n            {fileUrl && (\r\n              <>\r\n                <div style={{ backgroundColor: \"green\", margin: \"7\" }}>\r\n                  FileUrl :{\" \"}\r\n                  <a\r\n                    href={fileUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    style={{ padding: \"10px\", margin: \"10px\", color: \"green\", color: \"white\" }}\r\n                  >\r\n                    {fileUrl}\r\n                  </a>\r\n                </div>\r\n                <Button\r\n                  className=\"waveButton\"\r\n                  style={{ margin: \"10px\", color: \"green\" }}\r\n                  onClick={submitContract}\r\n                  disabled={!fileUrl || !fileName || !fileCategory || !fileDescription}\r\n                >\r\n                  Add to llbrary\r\n                </Button>\r\n              </>\r\n            )}\r\n            <div style={{ marginTop: \"30\", paddingTop: \"30\" }}>\r\n              <Switch\r\n                checkedChildren=\"Public\"\r\n                unCheckedChildren=\"Private\"\r\n                defaultChecked\r\n                onChange={e => {\r\n                  setPriv(!priv);\r\n\r\n                  console.log(priv);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg\">\r\n        <div className=\"bg__grey u-big-grey\"></div>\r\n        <div className=\"bg__img-wrap mod--1\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--1\"\r\n          />\r\n        </div>\r\n        <div className=\"bg__img-wrap mod--2\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c0091b91c1cbb7cad7e1_hero_illustr-02.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--2\"\r\n          />\r\n        </div>\r\n        <div className=\"bg__img-wrap mod--3\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00acd123f38faf9fcf1_hero_illustr-04.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--3\"\r\n          />\r\n        </div>\r\n        <div className=\"bg__img-wrap mod--4\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--4\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Empty, Input, Checkbox, Button, Switch } from \"antd\";\r\n\r\nexport default function Library({ publicLibrary, writeContracts, tx }) {\r\n  const [searchEvents, setSearchEvents] = useState(publicLibrary);\r\n  const [val, setVal] = useState(\"\");\r\n  const [data, setData] = useState(0);\r\n  const onSearch = e => {\r\n    setVal(e.target.value);\r\n    console.log(val);\r\n    setSearchEvents(publicLibrary.filter(item => item.name.includes(val)));\r\n  };\r\n\r\n  const getFilePrice = async(x) => {\r\n    let waveTnx;\r\n      // eslint-disable-next-line prettier/prettier\r\n      waveTnx = await tx(writeContracts.Library.assetPrice(x));\r\n      console.log(waveTnx)\r\n      return waveTnx;\r\n  }\r\n\r\n  // eslint-disable-next-line prettier/prettier\r\n  const buyFile = async (id) => {\r\n    try {\r\n      getFilePrice(id)\r\n      .then(r => {\r\n        let trx;\r\n        trx = tx(writeContracts.Library.buyItem(id,{value: r }));\r\n      })\r\n      // console.log(\"writeContracts\", writeContracts);\r\n      // let waveTnx;\r\n      // // eslint-disable-next-line prettier/prettier\r\n      // waveTnx = await tx(writeContracts.Library.buyItem(id, { value: (price * 1e18).toString() }));\r\n\r\n      // console.log(\"Minig..\", waveTnx.hash);\r\n\r\n      // await waveTnx.wait();\r\n      // console.log(\"Minig---\", waveTnx.hash);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#636C78\" }}>\r\n      <section id=\"#Library\" data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\" className=\"section mod--hero \">\r\n        <h1 className=\"heading--center\" style={{ color: \"#fff\" }}>\r\n          Library\r\n        </h1>\r\n        <Input placeholder=\"search by title\" onChange={onSearch} value={val} style={{ width: \"70%\", margin: \"20\" }} />\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          {searchEvents?.length ? (\r\n            searchEvents?.map((item, index) => (\r\n              <div key={item.transactionHash + item.blockNumber + \"_\"}>\r\n                <div className=\"flex-personal\">\r\n                  <div data-w-id=\"23aa82da-d192-8dd9-fd6c-34b1289acbf1\" className=\"content\">\r\n                    <div data-w-id=\"f29f62bd-d2b8-d92f-ba3b-fec3f8494fcb\" className=\"swiper-slide mod--work\">\r\n                      <div className=\"work__card\">\r\n                        <div className=\"work__ico-wrap\" style={{ width: \"100%\" }}>\r\n                          <div className=\"work__ico-anim\">\r\n                            <img\r\n                              src={\r\n                                item.Link ??\r\n                                \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\r\n                              }\r\n                              loading=\"lazy\"\r\n                              alt=\"\"\r\n                              className=\"work__ico\"\r\n                              sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\r\n                            />\r\n                            <img\r\n                              src={\r\n                                item.Link ??\r\n                                \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\r\n                              }\r\n                              loading=\"eager\"\r\n                              alt=\"\"\r\n                              className=\"work__ico mod--over\"\r\n                              sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <h3 className=\"work__title\">{item.name}</h3>\r\n                        <p className=\"work__p\">{item.description}</p>\r\n                        <a href={`${item.Link}`} download={item.name} target=\"_blank\">\r\n                          View\r\n                        </a>\r\n                        <br />\r\n                        {/* eslint-disable-next-line prettier/prettier */}\r\n                        <p className=\"work__p\">Price: $ {(item.price).toString()}</p>\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"waveButton\"\r\n                          style={{ margin: \"10px\", color: \"green\" }}\r\n                          // eslint-disable-next-line prettier/prettier\r\n                          onClick={() => buyFile(index)}\r\n                        >\r\n                          Buy File\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </div>\r\n        <div className=\"bg__grey u-big-grey\"></div>\r\n        <div className=\"bg__img-wrap mod--1\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--1\"\r\n          />\r\n        </div>\r\n        <div className=\"bg__img-wrap mod--4\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--4\"\r\n          />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Benefits() {\r\n\r\n  return (\r\n    <section id=\"Benefits\" className=\"section mod--work\">\r\n        <div data-w-id=\"23aa82da-d192-8dd9-fd6c-34b1289acbf1\" className=\"content\">\r\n            <h2 className=\"heading--center\">\r\n            Benefits of a Decentralized Library.\r\n            </h2>\r\n            <div data-swiper=\"work\" className=\"swiper mod--work\">\r\n                <div className=\"swiper-wrapper\">\r\n                    <div data-w-id=\"f29f62bd-d2b8-d92f-ba3b-fec3f8494fcb\" className=\"swiper-slide mod--work\">\r\n                        <div className=\"work__card\">\r\n                            <div className=\"work__ico-wrap\">\r\n                                <div className=\"work__ico-anim\">\r\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\" loading=\"lazy\" alt=\"\" className=\"work__ico\"/>\r\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\" loading=\"eager\" alt=\"\" className=\"work__ico mod--over\"/>\r\n                                </div>\r\n                            </div>\r\n                            <h3 className=\"work__title\">\r\n                                Unlimited access <br/>to multiple files\r\n                            </h3>\r\n                            <p className=\"work__p\">You can view and download any file,document, image,or video of your choice without any restrictions. </p>\r\n                        </div>\r\n                    </div>\r\n                    <div data-w-id=\"b4d1f57e-f6da-36d3-f9fc-34dd29e90da3\" className=\"swiper-slide mod--work\">\r\n                        <div className=\"work__card\">\r\n                            <div className=\"work__ico-wrap\">\r\n                                <div className=\"work__ico-anim\">\r\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad780a2a6c3d5587_work_ico-02.svg\" loading=\"lazy\" alt=\"\" className=\"work__ico\"/>\r\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad780a2a6c3d5587_work_ico-02.svg\" loading=\"eager\" alt=\"\" className=\"work__ico mod--over\"/>\r\n                                </div>\r\n                            </div>\r\n                            <h3 className=\"work__title\">\r\n                                Permanent hosting<br/> of files & documents\r\n                            </h3>\r\n                            <p className=\"work__p\">Files in our library are permanently hosted on IPFS without fear of being removed someday.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div data-w-id=\"7cbf0612-69fa-d5d9-0be0-c9398f6d2040\" className=\"swiper-slide mod--work\">\r\n                        <div className=\"work__card\">\r\n                            <div className=\"work__ico-wrap\">\r\n                                <div className=\"work__ico-anim\">\r\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad35eb9e9990de6b_work_ico-03.svg\" loading=\"lazy\" alt=\"\" className=\"work__ico\"/>\r\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad35eb9e9990de6b_work_ico-03.svg\" loading=\"eager\" alt=\"\" className=\"work__ico mod--over\"/>\r\n                                </div>\r\n                            </div>\r\n                            <h3 className=\"work__title\">\r\n                                Supports any format of file\r\n                            </h3>\r\n                            <p className=\"work__p\">\r\n                                The app has improved support for any file format\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div data-swiper=\"pagination-work\" className=\"swiper__pagination\">\r\n                <div className=\"swiper__pagination-dot active\"></div>\r\n                <div className=\"swiper__pagination-dot\"></div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer id=\"About\" data-w-id=\"5a902773-1dd3-2c0e-6f8b-6e47cae613d7\" className=\"footer\">\r\n      <div data-w-id=\"682e79bb-f4d4-aca3-65b1-e2dce7b2d527\" className=\"content\">\r\n        <div data-w-id=\"611e80fe-41d5-4cae-c50f-d3d115a1656e\" className=\"footer__offer\">\r\n          <h2 className=\"footer__offer-heading\">Get started with our Library.</h2>\r\n          <div data-style=\"dash2\" className=\"footer__offer-btn-wrap\">\r\n            <a\r\n              h\r\n              className=\"btn mod--offer w-inline-block\"\r\n              href=\"https://docs.google.com/document/d/1BdJDtpJNNA4v50HElhuG54_vyWScKbgA9w-xG7TFL-M/edit?usp=sharing\"\r\n              download=\"Docs\"\r\n              target=\"_blank\"\r\n            >\r\n              <div className=\"btn-offer__arrow-wrap\">\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac7568a0a8a34d4c9_ico_arrow.svg\"\r\n                  loading=\"eager\"\r\n                  width=\"16\"\r\n                  alt=\"\"\r\n                  className=\"btn-offer__arrow\"\r\n                />\r\n                <img\r\n                  src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac7568a0a8a34d4c9_ico_arrow.svg\"\r\n                  loading=\"eager\"\r\n                  width=\"16\"\r\n                  alt=\"\"\r\n                  className=\"btn-offer__arrow mod--over\"\r\n                />\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div data-w-id=\"7e9e6881-6e97-16bf-f176-6472c127fab0\" className=\"footer__columns mod--top\">\r\n          <div className=\"footer__col mod--1\">\r\n            <div data-hover=\"false\" data-delay=\"0\" className=\"footer__drop w-dropdown\">\r\n              <div className=\"footer__drop-btn w-dropdown-toggle\">\r\n                <div className=\"footer__drop-arrow\"></div>\r\n                <div className=\"footer__title\">About us</div>\r\n              </div>\r\n              <nav className=\"footer__drop-list w-dropdown-list\">\r\n                <p className=\"footer__p\">\r\n                  We are defeating data death preventing the accidental or intentional loss of information from human\r\n                  consciousness\r\n                </p>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer__col mod--2\">\r\n            <div data-hover=\"false\" data-delay=\"0\" className=\"footer__drop w-dropdown\">\r\n              <div className=\"footer__drop-btn w-dropdown-toggle\">\r\n                <div className=\"footer__drop-arrow\"></div>\r\n                <div className=\"footer__title\">Sitemap</div>\r\n              </div>\r\n              <nav className=\"footer__drop-list w-dropdown-list\">\r\n                <ul role=\"list\" className=\"footer__list\">\r\n                  <li className=\"footer__list-item\">\r\n                    <a href=\"#Big-transfers\" data-anim=\"link\" className=\"footer__nav-link w-inline-block\">\r\n                      <div className=\"nav-txt-anim\">\r\n                        <div className=\"nav-txt mod--over\">Upload</div>\r\n                        <div className=\"nav-txt\">Upload</div>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"footer__list-item\">\r\n                    <a href=\"#Benefits\" data-anim=\"link\" className=\"footer__nav-link w-inline-block\">\r\n                      <div className=\"nav-txt-anim\">\r\n                        <div className=\"nav-txt mod--over\">Benefits</div>\r\n                        <div className=\"nav-txt\">Benefits</div>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"footer__list-item\">\r\n                    <a href=\"#About\" data-anim=\"link\" className=\"footer__nav-link w-inline-block\">\r\n                      <div className=\"nav-txt-anim\">\r\n                        <div className=\"nav-txt mod--over\">About</div>\r\n                        <div className=\"nav-txt\">About</div>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer__col mod--3\">\r\n            <div data-hover=\"false\" data-delay=\"0\" className=\"footer__drop w-dropdown\">\r\n              <div className=\"footer__drop-btn w-dropdown-toggle\">\r\n                <div className=\"footer__drop-arrow\"></div>\r\n                <div className=\"footer__title\">Community</div>\r\n              </div>\r\n              <nav className=\"footer__drop-list w-dropdown-list\">\r\n                <ul role=\"list\" className=\"footer__list\">\r\n                  <li className=\"footer__list-item\">\r\n                    <a\r\n                      data-anim=\"link\"\r\n                      href=\"https://github.com/Epic-Byte\"\r\n                      target=\"_blank\"\r\n                      className=\"footer__nav-link w-inline-block\"\r\n                    >\r\n                      <div className=\"nav-txt-anim\">\r\n                        <div className=\"nav-txt mod--over\">Github</div>\r\n                        <div className=\"nav-txt\">Github</div>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div data-w-id=\"6fa7cd3d-1174-5ce2-c66f-feac5359db31\" className=\"footer__columns mod--bottom\">\r\n          <div className=\"footer__col mod--1 mod--bottom\">\r\n            <a href=\"https://www.halo-lab.com/\" target=\"_blank\" className=\"footer__copyright w-inline-block\">\r\n              <img\r\n                src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1b5d6cb8a000ae4fa6ed5_logo-copyright.svg\"\r\n                loading=\"eager\"\r\n                alt=\"\"\r\n                className=\"footer__copyright-logo\"\r\n              />\r\n              <div>2022 Team Call_Byte. All rights reserved</div>\r\n            </a>\r\n          </div>\r\n          <div className=\"footer__col mod--3 mod--bottom\">\r\n            <div\r\n              data-hover=\"false\"\r\n              data-delay=\"0\"\r\n              data-w-id=\"d72c125b-9204-994f-ddc2-45742146f539\"\r\n              className=\"droplang w-dropdown\"\r\n            >\r\n              <div className=\"droplang__btn w-dropdown-toggle\">\r\n                <div className=\"droplang__arrow\"></div>\r\n                <div>English</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div data-w-id=\"1ebd09bc-975c-910f-0331-5939e65d2cb5\" className=\"footer__line\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg mod--footer\">\r\n        <div data-w-id=\"8d4f32de-0889-8a62-2cd8-38dabae4cdd8\" className=\"bg__grey\"></div>\r\n        <div className=\"bg__img-wrap mod--5\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c0097303bbbc6f932748_footer_illustr-01.svg\"\r\n            loading=\"eager\"\r\n            data-w-id=\"95780d0c-c0ed-89df-fca2-82a29ec1fb46\"\r\n            alt=\"\"\r\n            className=\"bg__img mod--5\"\r\n          />\r\n        </div>\r\n        <div className=\"bg__img-wrap mod--6\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c009ad35eb7c2390de6a_footer_illustr-03.svg\"\r\n            loading=\"eager\"\r\n            data-w-id=\"95780d0c-c0ed-89df-fca2-82a29ec1fb47\"\r\n            alt=\"\"\r\n            className=\"bg__img mod--6\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"bg__img-wrap mod--7\">\r\n        <img\r\n          src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c0094a86366aa92a4b8a_footer_illustr-02.svg\"\r\n          loading=\"eager\"\r\n          data-w-id=\"95780d0c-c0ed-89df-fca2-82a29ec1fb48\"\r\n          alt=\"\"\r\n          className=\"bg__img mod--7\"\r\n        />\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input, Empty } from \"antd\";\r\nimport { AddressInput } from \"./\";\r\n\r\nexport default function PrivateLibrary({ writeContracts, tx, privateLibrary, mainnetProvider }) {\r\n  const [shareToAddresses, setShareToAddresses] = useState({});\r\n  const [searchEvents, setSearchEvents] = useState(privateLibrary);\r\n  // const [Price, setPrice] = useState(\"\");\r\n\r\n  const [val, setVal] = useState(\"\");\r\n  const onSearch = e => {\r\n    setVal(e.target.value);\r\n    console.log(val);\r\n    setSearchEvents(privateLibrary.filter(item => item.name.includes(val)));\r\n  };\r\n\r\n  // eslint-disable-next-line prettier/prettier\r\n  const salePrice = async (id) => {\r\n    try {\r\n      console.log(\"writeContracts\", writeContracts);\r\n      let waveTnx;\r\n      const newPrice = prompt(\"Please enter the selling price for your file in USD\");\r\n      console.log(newPrice);\r\n      // setPrice(newPrice);\r\n      waveTnx = await tx(writeContracts.Library.publicSale(id, newPrice));\r\n\r\n      await waveTnx.wait();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#636C78\" }}>\r\n      <section id=\"#Library\" data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\" className=\"section mod--hero \">\r\n        <h1 className=\"heading--center\" style={{ color: \"#fff\" }}>\r\n          Private Library\r\n        </h1>\r\n        <Input placeholder=\"search by title\" onChange={onSearch} value={val} style={{ width: \"70%\", margin: \"20\" }} />\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          {searchEvents?.length ? (\r\n            searchEvents?.map((item, index) => (\r\n              <div key={index + \"_\" + item.address} style={{ margin: 10 }}>\r\n                <div data-w-id=\"23aa82da-d192-8dd9-fd6c-34b1289acbf1\" className=\"content\">\r\n                  <div data-w-id=\"f29f62bd-d2b8-d92f-ba3b-fec3f8494fcb\" className=\"swiper-slide mod--work\">\r\n                    <div className=\"work__card\">\r\n                      <div className=\"work__ico-wrap\" style={{ width: \"100%\" }}>\r\n                        <div className=\"work__ico-anim\">\r\n                          <img\r\n                            src={\r\n                              item.Link ??\r\n                              \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\r\n                            }\r\n                            loading=\"lazy\"\r\n                            alt=\"\"\r\n                            className=\"work__ico\"\r\n                            sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\r\n                          />\r\n                          <img\r\n                            src={\r\n                              item.Link ??\r\n                              \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\r\n                            }\r\n                            loading=\"eager\"\r\n                            alt=\"\"\r\n                            className=\"work__ico mod--over\"\r\n                            sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <h3 className=\"work__title\">{item.name}</h3>\r\n                      <p className=\"work__p\">{item.description}</p>\r\n                      <a href={`${item.Link}`} download={item.name} target=\"_blank\">\r\n                        View\r\n                      </a>\r\n                      <br />\r\n                      {/* eslint-disable-next-line prettier/prettier */}\r\n                        <p className=\"work__p\">Price: $ {(item.price).toString()}</p>\r\n                      <div>\r\n                        <AddressInput\r\n                          ensProvider={mainnetProvider}\r\n                          placeholder=\"share to address\"\r\n                          value={shareToAddresses[index]}\r\n                          onChange={val => {\r\n                            const update = {};\r\n                            update[index] = val;\r\n                            setShareToAddresses({ ...shareToAddresses, ...update });\r\n                          }}\r\n                        />\r\n                        {/* <Input\r\n                          placeholder=\"share to address\"\r\n                          value={shareToAddresses[index]}\r\n                          onChange={e => {\r\n                            const update = {};\r\n                            update[index] = e.target.value;\r\n                            setShareToAddresses({ ...shareToAddresses, ...update });\r\n                          }}\r\n                        /> */}\r\n\r\n                        <Button\r\n                          style={{ margin: 10 }}\r\n                          onClick={() => {\r\n                            console.log(\"writeContracts\", writeContracts);\r\n                            // let id = 1;\r\n                            tx(writeContracts.Library.share([shareToAddresses[index]], index + 1));\r\n                          }}\r\n                        >\r\n                          share\r\n                        </Button>\r\n                        {/* eslint-disable-next-line prettier/prettier */}\r\n                      \r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"waveButton\"\r\n                          style={{ margin: \"10px\", color: \"green\" }}\r\n                          // eslint-disable-next-line prettier/prettier\r\n                          onClick={() => salePrice(index + 1)}\r\n                        >\r\n                          Sell\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </div>\r\n        <div className=\"bg__grey u-big-grey\"></div>\r\n        <div className=\"bg__img-wrap mod--1\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--1\"\r\n          />\r\n        </div>\r\n        <div className=\"bg__img-wrap mod--4\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--4\"\r\n          />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Empty, Collapse, Card } from \"antd\";\r\nimport { Address } from \"./\";\r\n\r\nexport default function PrivateLibrary({ shareEvents, mainnetProvider, address }) {\r\n  const { Panel } = Collapse;\r\n\r\n  const filteredShareEvents = shareEvents.filter(it => address == it.args[0]);\r\n\r\n  // console.log(filteredShareEvents);\r\n  const shareEventsReverse = filteredShareEvents.reverse();\r\n  // console.log(shareEventsReverse);\r\n  return (\r\n    <div style={{ backgroundColor: \"#636C78\" }}>\r\n      <section id=\"#Library\" data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\" className=\"section mod--hero \">\r\n        <h1 className=\"heading--center\" style={{ color: \"#fff\" }}>\r\n          Your Sharing History\r\n        </h1>\r\n        {shareEventsReverse?.length ? (\r\n          <Collapse defaultActiveKey={[\"2\"]} onChange={() => console.log(\"k\")}>\r\n            <Panel header=\"Private Files Transfered\" key=\"2\">\r\n              <Card\r\n                headStyle={{\r\n                  borderRadius: 5,\r\n                  background:\r\n                    \"linear-gradient(-90deg, rgba(162,34,195,0.5760898109243697) 7%, rgba(45,205,253,0.5312718837535014) 88%)\",\r\n                }}\r\n                bodyStyle={{\r\n                  borderRadius: 10,\r\n                  background:\r\n                    \"linear-gradient(90deg, rgba(140,34,195,0.5760898109243697) 7%, rgba(45,159,253,0.5312718837535014) 88%)\",\r\n                }}\r\n              >\r\n                {shareEventsReverse?.map(item => (\r\n                  <div\r\n                    key={item.blockNumber + item.blockHash}\r\n                    style={{\r\n                      minWidth: \"85%\",\r\n                      display: \"flex\",\r\n                      alignContent: \"space-between\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"start\",\r\n                    }}\r\n                  >\r\n                    <p style={{ marginRight: 6 }}>Shared: {\"  \"}</p>\r\n                    <span style={{ marginRight: 6, fontWeight: 826 }}>#{item.args[1]} </span>\r\n                    <p style={{ marginLRight: 16 }}>to &nbsp; &nbsp; {\"    \"}</p>\r\n                    <Address address={item.args[2]} ensProvider={mainnetProvider} fontSize={16} />\r\n                  </div>\r\n                ))}\r\n              </Card>\r\n            </Panel>\r\n          </Collapse>\r\n        ) : (\r\n          <Empty />\r\n        )}\r\n\r\n        <div className=\"bg__grey u-big-grey\"></div>\r\n        <div className=\"bg__img-wrap mod--1\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--1\"\r\n          />\r\n        </div>\r\n        <div className=\"bg__img-wrap mod--4\">\r\n          <img\r\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\r\n            loading=\"eager\"\r\n            style={{\r\n              WebkitTransform:\r\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\r\n            }}\r\n            alt=\"\"\r\n            className=\"bg__img mod--4\"\r\n          />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import Portis from \"@portis/web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport Authereum from \"authereum\";\r\nimport {\r\n  useBalance,\r\n  useContractLoader,\r\n  useContractReader,\r\n  useGasPrice,\r\n  useOnBlock,\r\n  useUserProviderAndSigner,\r\n} from \"eth-hooks\";\r\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\r\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\r\nimport Fortmatic from \"fortmatic\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport ReactJson from \"react-json-view\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport WalletLink from \"walletlink\";\r\nimport Web3Modal from \"web3modal\";\r\nimport \"./App.css\";\r\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\r\nimport { Header1, BigTransfer, Library, Benefits, Footer, PrivateLibrary, SharingHistory } from \"./components\";\r\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\r\nimport { Transactor } from \"./helpers\";\r\nimport { useContractConfig } from \"./hooks\";\r\n\r\nconst { BufferList } = require(\"bl\");\r\nconst ipfsAPI = require(\"ipfs-http-client\");\r\nconst ipfs = ipfsAPI({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\r\n\r\nconst { ethers } = require(\"ethers\");\r\n\r\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\r\n\r\n// 😬 Sorry for all the console logging\r\nconst DEBUG = true;\r\nconst NETWORKCHECK = true;\r\n\r\n// EXAMPLE STARTING JSON:\r\nconst STARTING_JSON = {\r\n  description: \"It's actually a bison?\",\r\n  external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\r\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\r\n  name: \"Buffalo\",\r\n  attributes: [\r\n    {\r\n      trait_type: \"BackgroundColor\",\r\n      value: \"green\",\r\n    },\r\n    {\r\n      trait_type: \"Eyes\",\r\n      value: \"googly\",\r\n    },\r\n  ],\r\n};\r\n\r\n// 🛰 providers\r\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\r\n\r\nconst scaffoldEthProvider = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\r\n  : null;\r\nconst poktMainnetProvider = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\r\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\r\n    )\r\n  : null;\r\nconst mainnetInfura = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\r\n  : null;\r\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID\r\n\r\n// 🏠 Your local provider is usually pointed at your local blockchain\r\nconst localProviderUrl = targetNetwork.rpcUrl;\r\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\r\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\r\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\r\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\r\n\r\n// 🔭 block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n// Coinbase walletLink init\r\nconst walletLink = new WalletLink({\r\n  appName: \"coinbase\",\r\n});\r\n\r\n// WalletLink provider\r\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\r\n\r\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\r\n  cacheProvider: true, // optional\r\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        bridge: \"https://polygon.bridge.walletconnect.org\",\r\n        infuraId: INFURA_ID,\r\n        rpc: {\r\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\r\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n          100: \"https://dai.poa.network\", // xDai\r\n        },\r\n      },\r\n    },\r\n    portis: {\r\n      display: {\r\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\r\n        name: \"Portis\",\r\n        description: \"Connect to Portis App\",\r\n      },\r\n      package: Portis,\r\n      options: {\r\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\r\n      },\r\n    },\r\n    fortmatic: {\r\n      package: Fortmatic, // required\r\n      options: {\r\n        key: \"pk_live_5A7C91B2FC585A17\", // required\r\n      },\r\n    },\r\n    \"custom-walletlink\": {\r\n      display: {\r\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\r\n        name: \"Coinbase\",\r\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\r\n      },\r\n      package: walletLinkProvider,\r\n      connector: async (provider, _options) => {\r\n        await provider.enable();\r\n        return provider;\r\n      },\r\n    },\r\n    authereum: {\r\n      package: Authereum, // required\r\n    },\r\n  },\r\n});\r\n\r\nfunction App(props) {\r\n  const mainnetProvider =\r\n    poktMainnetProvider && poktMainnetProvider._isProvider\r\n      ? poktMainnetProvider\r\n      : scaffoldEthProvider && scaffoldEthProvider._network\r\n      ? scaffoldEthProvider\r\n      : mainnetInfura;\r\n\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n  const [address, setAddress] = useState();\r\n\r\n  const logoutOfWeb3Modal = async () => {\r\n    await web3Modal.clearCachedProvider();\r\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\r\n      await injectedProvider.provider.disconnect();\r\n    }\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  };\r\n\r\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\r\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\r\n\r\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\r\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\r\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\r\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\r\n  const userSigner = userProviderAndSigner.signer;\r\n\r\n  useEffect(() => {\r\n    async function getAddress() {\r\n      if (userSigner) {\r\n        const newAddress = await userSigner.getAddress();\r\n        setAddress(newAddress);\r\n      }\r\n    }\r\n    getAddress();\r\n  }, [userSigner]);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\r\n  const selectedChainId =\r\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\r\n\r\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\r\n\r\n  // The transactor wraps transactions and provides notificiations\r\n  const tx = Transactor(userSigner, gasPrice);\r\n\r\n  // Faucet Tx can be used to send funds from the faucet\r\n\r\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  // Just plug in different 🛰 providers to get your balance on different chains:\r\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\r\n\r\n  const contractConfig = useContractConfig();\r\n\r\n  // Load in your local 📝 contract and read a value from it:\r\n  const readContracts = useContractLoader(localProvider, contractConfig);\r\n\r\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\r\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\r\n\r\n  // EXTERNAL CONTRACT EXAMPLE:\r\n  //\r\n  // If you want to bring in the mainnet DAI contract it would look like:\r\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\r\n\r\n  // If you want to call a function on a new block\r\n  useOnBlock(mainnetProvider, () => {\r\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\r\n  });\r\n\r\n  // Then read your DAI balance like:\r\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\r\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\r\n  ]);\r\n\r\n  const publicLibrary = useContractReader(writeContracts, \"Library\", \"viewPublicLib\");\r\n  console.log(\"🤗 publicLibrary:\", publicLibrary);\r\n  const privateLibrary = useContractReader(writeContracts, \"Library\", \"viewPrivateLib\");\r\n  console.log(\"🤗 privateLibrary:\", privateLibrary);\r\n\r\n  // 📟 Listen for broadcast events\r\n  const uploadEvents = useEventListener(readContracts, \"Library\", \"PublicUpload\", localProvider, 1);\r\n  console.log(\"📟 Upload events:\", uploadEvents);\r\n\r\n  const shareEvents = useEventListener(readContracts, \"Library\", \"Share\", localProvider, 1);\r\n  console.log(\"📟 Share events:\", shareEvents);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      DEBUG &&\r\n      mainnetProvider &&\r\n      address &&\r\n      selectedChainId &&\r\n      yourLocalBalance &&\r\n      yourMainnetBalance &&\r\n      readContracts &&\r\n      writeContracts &&\r\n      mainnetContracts\r\n    ) {\r\n      // console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\r\n      // console.log(\"🌎 mainnetProvider\", mainnetProvider);\r\n      console.log(\"🏠 localChainId\", localChainId);\r\n      console.log(\"👩‍💼 selected address:\", address);\r\n      // console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\r\n      // console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\r\n      // console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\r\n      console.log(\"📝 readContracts\", readContracts);\r\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\r\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\r\n      console.log(\"🔐 writeContracts\", writeContracts);\r\n    }\r\n  }, [\r\n    mainnetProvider,\r\n    address,\r\n    selectedChainId,\r\n    yourLocalBalance,\r\n    yourMainnetBalance,\r\n    readContracts,\r\n    writeContracts,\r\n    mainnetContracts,\r\n  ]);\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    const provider = await web3Modal.connect();\r\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n\r\n    provider.on(\"chainChanged\", chainId => {\r\n      console.log(`chain changed to ${chainId}! updating providers`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    provider.on(\"accountsChanged\", () => {\r\n      console.log(`account changed!`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    // Subscribe to session disconnection\r\n    provider.on(\"disconnect\", (code, reason) => {\r\n      console.log(code, reason);\r\n      logoutOfWeb3Modal();\r\n    });\r\n  }, [setInjectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <BrowserRouter>\r\n        <Header1\r\n          acnt={\r\n            <Account\r\n              address={address}\r\n              localProvider={localProvider}\r\n              userSigner={userSigner}\r\n              mainnetProvider={mainnetProvider}\r\n              price={price}\r\n              web3Modal={web3Modal}\r\n              loadWeb3Modal={loadWeb3Modal}\r\n              logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n              blockExplorer={blockExplorer}\r\n              networkDisplay={\r\n                <div\r\n                  style={{\r\n                    // zIndex: -1,\r\n                    position: \"absolute\",\r\n                    right: 15,\r\n                    // top: 28,\r\n                    // padding: 5,\r\n                    color: targetNetwork.color,\r\n                    // border: \"1px solid red\",\r\n                  }}\r\n                >\r\n                  {targetNetwork?.name}\r\n                </div>\r\n              }\r\n            />\r\n          }\r\n          setRoute={setRoute}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <BigTransfer writeContracts={writeContracts} tx={tx} />\r\n          </Route>\r\n          <Route path=\"/library\">\r\n            <Library\r\n              writeContracts={writeContracts}\r\n              tx={tx}\r\n              publicLibrary={publicLibrary}\r\n              //uploadEvents={uploadEvents}\r\n            />\r\n          </Route>\r\n\r\n          <Route path=\"/privatelibrary\">\r\n            <PrivateLibrary\r\n              writeContracts={writeContracts}\r\n              tx={tx}\r\n              privateLibrary={privateLibrary}\r\n              mainnetProvider={mainnetProvider}\r\n            />\r\n          </Route>\r\n\r\n          <Route path=\"/history\">\r\n            <SharingHistory shareEvents={shareEvents} mainnetProvider={mainnetProvider} address={address} />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <Benefits />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\nimport { loadAppContracts } from \"../helpers/loadAppContracts\";\r\n\r\nexport const useContractConfig = () => {\r\n  const [contractsConfig, setContractsConfig] = useState({});\r\n\r\n  useEffect(() => {\r\n    const loadFunc = async () => {\r\n      const result = await loadAppContracts();\r\n      setContractsConfig(result);\r\n    };\r\n    void loadFunc();\r\n  }, []);\r\n  return contractsConfig;\r\n};\r\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\r\n};\r\n\r\nconst prevTheme = window.localStorage.getItem(\"theme\");\r\n\r\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: subgraphUri,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={\"light\"}>\r\n      <App subgraphUri={subgraphUri} />\r\n    </ThemeSwitcherProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}